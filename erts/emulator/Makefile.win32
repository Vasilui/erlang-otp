# ROOT    	   	Top of ERTS directories (must be absolute).
#

#
# How to build a release:
#
#	omake -W -EN -f Makefile.win32 GCC=1 NODEBUG=1
#
# How to build a debug release:
#
#	omake -W -EN -f Makefile.win32
#

include ../vsn.mk

CC = cl -nologo
RC = rc
ROOT = \erts
CP=copy

SETARGV=setargv.obj

# Comment the following line to compile with symbols
# NODEBUG=1

#Emulator is always beam, but we use EMULATOR as the executable filename...

!UNDEF EMULATOR

!if defined(NODEBUG) || defined(RELEASE)
#ERL_DEBUG 	= -Zi -Yd
ERL_DEBUG 	= -Ox
BEAM_DEBUG 	= -Ot -Oa -Ob2 -Oi -Oy -Gs -G6
#BEAM_DEBUG 	= -Zi -Yd
TTYPE		= opt
OBJDIR		= $(ROOT)\erts\obj.beam\win32
ETCOBJDIR	= $(ROOT)\erts\obj\win32
EMULATOR 	= beam$(EMULATOR_NUMBER).exe
BEAM_DLL 	= beam$(EMULATOR_NUMBER).dll
ERLDLLLIB	= erl_dll.lib
LINKDEBUG = -release
#LINKDEBUG = -debug
GCCDEBUG=
!elseif defined(INSTR)
ERL_DEBUG 	= -Ox -Oy- -Yd -DINSTRUMENT
BEAM_DEBUG 	= $(ERL_DEBUG)
TTYPE		= instr
OBJDIR		= $(ROOT)\erts\obj.instr.beam\win32
ETCOBJDIR	= $(ROOT)\erts\obj\win32
EMULATOR 	= beam$(EMULATOR_NUMBER).instr.exe
LINKDEBUG = -release
GCCDEBUG	= -DINSTRUMENT
!elseif defined(PURIFY)
ERL_DEBUG 	= -Ox -Oy- -Yd -DPURIFY
BEAM_DEBUG 	= $(ERL_DEBUG)
TTYPE		= purify
OBJDIR		= $(ROOT)\erts\obj.purify.beam\win32
ETCOBJDIR	= $(ROOT)\erts\obj\win32
EMULATOR 	= beam$(EMULATOR_NUMBER).purify.exe
LINKDEBUG = -release
GCCDEBUG	=
!else
## ERL_DEBUG 	= -DDEBUG -Yd
#ERL_DEBUG 	= -DDEBUG -DINSTRUMENT -Yd
#BEAM_DEBUG 	= $(ERL_DEBUG)
#TTYPE		= debug
#OBJDIR		= $(ROOT)\erts\obj.debug.beam\win32
#ETCOBJDIR	= $(ROOT)\erts\obj.debug\win32
#EMULATOR 	= beam$(EMULATOR_NUMBER).debug.exe
#LINKDEBUG 	= -debug

ERL_DEBUG 	= -Zi -Yd -DDEBUG
BEAM_DEBUG 	= -Zi -Yd -DDEBUG
TTYPE		= debug
OBJDIR		= $(ROOT)\erts\obj.debug.beam\win32
ETCOBJDIR	= $(ROOT)\erts\obj.debug\win32
EMULATOR 	= beam$(EMULATOR_NUMBER).debug.exe
BEAM_DLL 	= beam$(EMULATOR_NUMBER).debug.dll
ERLDLLLIB	= erl_debug_dll.lib
LINKDEBUG 	= -debug
GCCDEBUG	= -g -DDEBUG

!endif

!if defined(PURIFY)
BUILD_TYPE	= -purify
!elseif defined(RELEASE)
BUILD_TYPE	=
!elseif defined(NODEBUG)
BUILD_TYPE	= -opt
!else
BUILD_TYPE	= -debug
!endif

BINDIR		= $(ROOT)\bin\win32
EMUDIR		= $(ROOT)\erts\emulator
DRVDIR		= $(EMUDIR)\drivers\win32
UTILDIR		= $(EMUDIR)\utils
GENDRVDIR	= $(EMUDIR)\drivers\common
SYSDIR		= $(EMUDIR)\sys\win32
BEAMDIR		= $(EMUDIR)\beam
ETCDIR		= $(ROOT)\erts\etc\win32
ERLSRVDIR	= $(ROOT)\erts\etc\win32\erlsrv
GENETCDIR	= $(ROOT)\erts\etc\common
ERL_INTERFACE   = $(ROOT)\lib\erl_interface\src
ZLIBDIR		= $(EMUDIR)\zlib
TARGET		= $(EMUDIR)\win32
ATOMS 		= atom.names bif.names
BOOTBEAMDIR	= $(ROOT)\lib\kernel\ebin
BOOTBEAMS 	= $(BOOTBEAMDIR)\otp_ring0.beam \
                  $(BOOTBEAMDIR)\init.beam \
                  $(BOOTBEAMDIR)\erl_prim_loader.beam \
                  $(BOOTBEAMDIR)\prim_inet.beam \
                  $(BOOTBEAMDIR)\prim_file.beam \
                  $(BOOTBEAMDIR)\erlang.beam

GENOPTAB = $(ROOT)\lib\compiler\src\genop.tab

INIT_OBJS = $(OBJDIR)\erl_main.obj		$(OBJDIR)\preload.obj

INIT_OBJS_SAE = $(OBJDIR)\erl_main_sae.obj	$(OBJDIR)\preload_sae.obj

ERLOBJS = \
	$(OBJDIR)\erl_atom_table.obj \
	$(OBJDIR)\erl_bif_table.obj \
	$(OBJDIR)\erl_pbifs.obj \
	$(OBJDIR)\atom.obj \
	$(OBJDIR)\benchmark.obj \
	$(OBJDIR)\bif.obj \
	$(OBJDIR)\big.obj \
	$(OBJDIR)\binary.obj \
	$(OBJDIR)\break.obj \
	$(OBJDIR)\driver_tab.obj \
	$(OBJDIR)\copy.obj \
	$(OBJDIR)\erl_db.obj \
	$(OBJDIR)\erl_db_util.obj \
	$(OBJDIR)\erl_db_hash.obj \
	$(OBJDIR)\erl_db_tree.obj \
	$(OBJDIR)\dist.obj \
	$(OBJDIR)\erl_fun.obj \
	$(OBJDIR)\erl_init.obj \
	$(OBJDIR)\erl_math.obj \
	$(OBJDIR)\erl_message.obj \
	$(OBJDIR)\erl_node_tables.obj \
	$(OBJDIR)\erl_process.obj \
	$(OBJDIR)\erl_process_dict.obj \
	$(OBJDIR)\erl_arith.obj \
	$(OBJDIR)\erl_term.obj \
	$(OBJDIR)\erl_trace.obj \
	$(OBJDIR)\erl_vector.obj \
	$(OBJDIR)\erl_bif_trace.obj \
	$(OBJDIR)\erl_bif_info.obj \
	$(OBJDIR)\erl_bif_lists.obj \
	$(OBJDIR)\erl_bif_op.obj \
	$(OBJDIR)\erl_bif_os.obj \
	$(OBJDIR)\erl_bif_port.obj \
	$(OBJDIR)\erl_bif_wrap.obj \
	$(OBJDIR)\erl_bits.obj \
	$(OBJDIR)\erl_async.obj \
	$(OBJDIR)\export.obj \
	$(OBJDIR)\external.obj \
	$(OBJDIR)\fix_alloc.obj \
	$(OBJDIR)\ggc.obj \
	$(OBJDIR)\erl_gc.obj \
	$(OBJDIR)\hash.obj \
	$(OBJDIR)\index.obj \
	$(OBJDIR)\io.obj \
	$(OBJDIR)\module.obj \
	$(OBJDIR)\register.obj \
	$(OBJDIR)\time.obj \
	$(OBJDIR)\erl_time_sup.obj \
	$(OBJDIR)\utils.obj \
	$(OBJDIR)\erl_posix_str.obj \
	$(OBJDIR)\win_efile.obj \
	$(OBJDIR)\win_ddll_drv.obj \
	$(OBJDIR)\win_con.obj \
	$(OBJDIR)\pure_api.obj \
	$(OBJDIR)\erl_md5.obj \
	$(OBJDIR)\purify_pools.obj

DRVOBJS = \
	$(OBJDIR)\registry_drv.obj \
	$(OBJDIR)\ddll_drv.obj \
	$(OBJDIR)\efile_drv.obj \
	$(OBJDIR)\ttsl_drv.obj \
	$(OBJDIR)\inet_drv.obj \
	$(OBJDIR)\gs_drv.obj \
	$(OBJDIR)\ram_file_drv.obj


DLL_SYSOBJS = \
	$(OBJDIR)\dll_sys.obj \
	$(OBJDIR)\sys_float.obj \
	$(OBJDIR)\sys_time.obj \
	$(OBJDIR)\sys_select.obj \
	$(OBJDIR)\sys_threads.obj \
	$(OBJDIR)\dosmap.obj \
	$(OBJDIR)\elib_malloc.obj \
	$(OBJDIR)\erl_old_sl_alloc.obj \
	$(OBJDIR)\erl_sl_alloc.obj

SYSOBJS = \
	$(OBJDIR)\sys.obj \
	$(OBJDIR)\sys_float.obj \
	$(OBJDIR)\sys_time.obj \
	$(OBJDIR)\sys_select.obj \
	$(OBJDIR)\sys_threads.obj \
	$(OBJDIR)\dosmap.obj \
	$(OBJDIR)\elib_malloc.obj \
	$(OBJDIR)\erl_old_sl_alloc.obj \
	$(OBJDIR)\erl_sl_alloc.obj
# Comment in if linking with a DLL instead of LIB.

BEAMOBJS = \
	$(OBJDIR)\beam_emu.obj \
	$(OBJDIR)\beam_opcodes.obj \
	$(OBJDIR)\beam_load.obj \
	$(OBJDIR)\beam_bif_load.obj \
	$(OBJDIR)\beam_bp.obj \
	$(OBJDIR)\beam_catches.obj \
	$(OBJDIR)\beam_debug.obj


SAESTARTOBJS = \
	$(OBJDIR)\erl_start.obj

ZLIBOBJS = \
	$(OBJDIR)\gzio.obj \
	$(OBJDIR)\adler32.obj \
	$(OBJDIR)\compress.obj \
	$(OBJDIR)\crc32.obj \
	$(OBJDIR)\deflate.obj \
	$(OBJDIR)\infblock.obj \
	$(OBJDIR)\infcodes.obj \
	$(OBJDIR)\inffast.obj \
	$(OBJDIR)\inflate.obj \
	$(OBJDIR)\inftrees.obj \
	$(OBJDIR)\infutil.obj \
	$(OBJDIR)\trees.obj \
	$(OBJDIR)\uncompr.obj \
	$(OBJDIR)\zutil.obj

ERL_INCLUDES  =	-I$(TARGET) \
		-I$(EMUDIR)\beam \
		-I$(EMUDIR)\drivers\common \
		-I$(EMUDIR)\sys\win32 \
		-I$(EMUDIR)\drivers\win32 \
		-I$(ZLIBDIR) \
		-I$(ROOT)\erts\etc\common \
		-I$(ROOT)\erts\etc\win32

!ifdef GCC
DEFINES =  $(ERL_INCLUDES) -DNT -D__WIN32__ -DWINDOWS -DWIN32 -D_WIN32 
!else
DEFINES =  $(ERL_INCLUDES) -DNT -D__WIN32__ -DWINDOWS -DWIN32 -D_WIN32 \
	-DNO_JUMP_TABLE
!endif

!if defined(NODEBUG)
ERL_CLIBCMT = -MD
ERL_CFLAGS_COMMON = -c $(ERL_CLIBCMT) $(DEFINES) -W3 -DUSE_THREADS
ERL_LIBCMT = MSVCRT.LIB
!else
ERL_CLIBCMT = -MDd
ERL_CFLAGS_COMMON = -c $(ERL_CLIBCMT) $(DEFINES) -W3 -DUSE_THREADS
ERL_LIBCMT = MSVCRTD.LIB
!endif


ERL_CFLAGS = $(ERL_DEBUG) $(ERL_CFLAGS_COMMON) $(RELEASE_FLAGS)
BEAM_CFLAGS = $(BEAM_DEBUG) $(ERL_CFLAGS_COMMON) $(RELEASE_FLAGS)
ERL_LFLAGS = -MD

WIN32_LIBS_NO_LIBCMT = kernel32.lib advapi32.lib gdi32.lib \
	user32.lib comctl32.lib \
	winspool.lib comdlg32.lib shell32.lib oldnames.lib

IN32_LIBS = libcmtd.lib kernel32.lib advapi32.lib gdi32.lib \
	user32.lib comctl32.lib \
	winspool.lib comdlg32.lib shell32.lib oldnames.lib

WINSOCK		= ws2_32.lib mswsock.lib
ERL_RES = $(OBJDIR)\erl.res
BEAM_RES = $(OBJDIR)\beam.res
BEAMS_RES= $(OBJDIR)\beams.res
ERL_RUNTIME_LIB = $(OBJDIR)\erl_runtime.lib

ENTRY_SRC=$(ETCDIR)\port_entry.c
ENTRY_OBJ=$(ETCOBJDIR)\port_entry.obj
PORT_ENTRY_POINT=erl_port_entry
ERL_ENTRY_LFLAGS=$(ERL_LFLAGS) -link -entry:$(PORT_ENTRY_POINT)

#
# Targets
#

all:    $(ENTRY_OBJ) $(TARGET)\beam_opcodes.h resources build_tools erl_libs \
	others

$(ENTRY_OBJ):  $(ENTRY_SRC)
	$(CC) $(ERL_CFLAGS) -Fo$(ENTRY_OBJ) $(ENTRY_SRC) \
	-W3 -nologo  

$(TARGET)\beam_opcodes.h: beam\ops.tab utils\beam_makeops
	perl utils\beam_makeops -outdir $(TARGET) -emulator $(GENOPTAB) beam\ops.tab

resources: $(ERL_RES) $(BEAM_RES) $(BEAMS_RES)

erl_libs: $(ERL_RUNTIME_LIB)

$(ERL_RUNTIME_LIB): $(ERLOBJS)
	lib -out:$*.lib $(ERLOBJS)

$(BINDIR)\$(BEAM_DLL): $(DLL_SYSOBJS) $(DRVOBJS) $(BEAMOBJS) \
	$(ERL_RUNTIME_LIB)  $(ZLIBDIR)\zlib.lib $(SYSDIR)\erl.def $(BEAMS_RES)
	link $(LINKDEBUG) -nologo -pdb:none -incremental:no  \
		-dll \
		$(WIN32_LIBS_NO_LIBCMT) $(ERL_LIBCMT) \
		$(DLL_SYSOBJS) $(DRVOBJS)  \
		$(BEAMOBJS) $(ERL_RUNTIME_LIB) $(ZLIBDIR)\zlib.lib \
		$(BEAMS_RES) -def:$(SYSDIR)\erl.def -implib:$(BINDIR)\$(ERLDLLLIB) \
		-out:$(BINDIR)\$(BEAM_DLL)
!ifdef PURIFY
	purify /Run=no /Replace=yes $(BINDIR)\$(BEAM_DLL)
!endif

$(OBJDIR)\dll_sys.obj: $(SYSDIR)\sys.c
    $(CC) $(ERL_CFLAGS) -Fo$@ $? -DERL_RUN_SHARED_LIB=1

$(OBJDIR)\erl_start.obj: $(SYSDIR)\erl_start.c
    $(CC) $(ERL_CFLAGS) -Fo$@ $? -DERL_RUN_SHARED_LIB=1

!ifdef GCC
# Compiling code using jumptables with Cygwin GCC.
# The object (.o) is edited with the coffix tool to a .obj file that 
# Microsoft's linker understands.

CGCC=gcc
GCC_CFLAGS=-Wall -O3 $(GCCDEBUG) -fomit-frame-pointer \
	-D_WIN32 -DNT  -D__WIN32__ -DWINDOWS \
	-idirafter win32 -idirafter sys/win32 \
	-idirafter ../etc/win32 -idirafter drivers/common \
	-idirafter drivers/win32 -idirafter ./beam

# Converting gcc's PE to Microsoft's

$(OBJDIR)\beam_emu.obj: $(OBJDIR)\beam_emu.o $(BINDIR)\coffix.exe
	$(CP) $*.o $*.obj
	$(BINDIR)\coffix.exe -e $*.obj

# The emulator loop, gives +2000 EStones on a pentium II 266 MHz
$(OBJDIR)\beam_emu.o: 	beam\beam_emu.c $(TARGET)\beam_cold.h \
			$(TARGET)\beam_opcodes.h \
			$(TARGET)\erl_version.h $(TARGET)\beam_hot.h beam\version.h
	$(CGCC) $(GCC_CFLAGS) -o $(OBJDIR)\beam_emu.o \
		-c beam\beam_emu.c

!else

$(OBJDIR)\beam_emu.obj: beam\beam_emu.c $(TARGET)\beam_cold.h \
			$(TARGET)\beam_opcodes.h \
			$(TARGET)\erl_version.h $(TARGET)\beam_hot.h \
			beam\version.h
	$(CC) $(BEAM_CFLAGS) -Fo$(OBJDIR)\ beam\beam_emu.c

!endif

$(ZLIBDIR)\zlib.lib: $(ZLIBOBJS)
	lib -out:$(ZLIBDIR)\zlib.lib $(ZLIBOBJS)

others: $(BINDIR)\inet_gethost.exe \
	$(BINDIR)\erl.exe \
	$(BINDIR)\heart.exe $(BINDIR)\erlc.exe \
	$(BINDIR)\inet_gethost.exe \
	$(BINDIR)\erl_log.exe $(BINDIR)\erl_stub16.exe \
	$(BINDIR)\werl.exe $(BINDIR)\erlsrv.exe \
	$(BINDIR)\start_erl.exe 

DLL_ERL_OBJS = $(ETCOBJDIR)\dll_erl.obj $(ETCOBJDIR)\dll_win_erlexec.obj # $(ETCOBJDIR)\dll_erl.res

DLL_WERL_OBJS = $(ETCOBJDIR)\dll_werl.obj $(ETCOBJDIR)\dll_win_erlexec.obj

DDL_ERL_MAIN_SAE_OBJS = $(OBJDIR)\erl_main_sae.obj $(ETCOBJDIR)\dll_win_erlexec.obj


$(BINDIR)\erl.exe: $(DLL_ERL_OBJS) $(BINDIR)\$(BEAM_DLL)
	$(CC) $(ERL_CLIBCMT) $(ERL_DEBUG) $(BEAM_DEBUG) \
		-Fe$@ $(DLL_ERL_OBJS) $(ERL_RES) \
		$(BINDIR)\$(ERLDLLLIB) \
		advapi32.lib user32.lib

$(BINDIR)\werl.exe: $(DLL_WERL_OBJS) $(BINDIR)\$(BEAM_DLL)
	$(CC) $(ERL_CLIBCMT) $(ERL_DEBUG) $(BEAM_DEBUG) \
		-Fe$@ $(DLL_WERL_OBJS) $(ERL_RES) \
		$(BINDIR)\$(ERLDLLLIB) \
		advapi32.lib user32.lib

$(BINDIR)\erl_main_sae.exe: $(DDL_ERL_MAIN_SAE_OBJS) $(BINDIR)\$(BEAM_DLL)
	$(CC) $(ERL_CLIBCMT) $(ERL_DEBUG) $(BEAM_DEBUG) \
		-Fe$@ $(DDL_ERL_MAIN_SAE_OBJS) $(ERL_RES) \
		$(BINDIR)\$(ERLDLLLIB) \
		advapi32.lib user32.lib

$(BINDIR)\erlc.exe: $(ETCOBJDIR)\erlc.obj
	$(CC) -Fe$@ $** $(SETARGV) $(ERL_RES) $(WINSOCK)

$(BINDIR)\inet_gethost.exe: $(ETCOBJDIR)\inet_gethost.obj $(ENTRY_OBJ)
	$(CC) -Fe$@ $** $(SETARGV) $(WINSOCK) $(ERL_RES) \
		$(ERL_ENTRY_LFLAGS)


#$(TOOLS32)\lib\mpr.lib 

$(BINDIR)\erl_stub16.exe: $(ETCOBJDIR)\erl_stub16.obj
	$(CC) -Fe$@ $** $(ERL_RES) advapi32.lib user32.lib

$(ETCOBJDIR)\erl_stub16.obj: $(SYSDIR)\erl_stub16.c
	$(CC) $(ERL_CFLAGS) -Fo$(ETCOBJDIR)\erl_stub16.obj $(SYSDIR)\erl_stub16.c \
	-W3 -nologo  -Dtry=__try -Dexcept=__except

$(BINDIR)\heart.exe: $(ETCOBJDIR)\heart.obj $(ENTRY_OBJ)
	$(CC) $(ERL_LFLAGS) -Fe$@ $** $(ERL_RES) advapi32.lib user32.lib $(ERL_ENTRY_LFLAGS)

$(ETCOBJDIR)\heart.obj: $(GENETCDIR)\heart.c
	$(CC) $(ERL_CFLAGS) -Fo$(ETCOBJDIR)\heart.obj $(GENETCDIR)\heart.c \
	-W3 -nologo  -Dtry=__try -Dexcept=__except

# Special entry point not needed in start_erl 

$(BINDIR)\start_erl.exe: $(ETCOBJDIR)\start_erl.obj
	$(CC) $(ERL_LFLAGS) -Fe$@ $** $(ERL_RES) advapi32.lib user32.lib

$(ETCOBJDIR)\start_erl.obj: $(ETCDIR)\start_erl.c
	$(CC) $(ERL_CFLAGS) -Fo$(ETCOBJDIR)\start_erl.obj $(ETCDIR)\start_erl.c \
	-W3 -nologo


$(BINDIR)\erlsrv.exe:
	cd $(ERLSRVDIR)
	$(MAKE) -$(MAKEFLAGS) -f Makefile.win32 $(BINDIR)\erlsrv.exe
	cd $(EMUDIR)

# The following are used for debugging and testing only.

$(BINDIR)\erl_log.exe: $(ETCOBJDIR)\erl_log.obj

# Rename erlexec.exe to erl.obj and werl.obj.

$(ETCOBJDIR)\erl.obj: $(GENETCDIR)\erlexec.c
	$(CC) $(ERL_CFLAGS) $(BROWSERETC) -Fo$(ETCOBJDIR)\erl.obj \
	-DBUILD_TYPE=\"$(BUILD_TYPE)\" $(GENETCDIR)\erlexec.c

$(ETCOBJDIR)\werl.obj: $(GENETCDIR)\erlexec.c
	$(CC) $(ERL_CFLAGS) $(BROWSERETC) -Fo$(ETCOBJDIR)\werl.obj \
	-DBUILD_TYPE=\"$(BUILD_TYPE)\" -DWIN32_WERL $(GENETCDIR)\erlexec.c

$(ETCOBJDIR)\dll_erl.obj: $(GENETCDIR)\erlexec.c
	$(CC) $(ERL_CFLAGS) $(BROWSERETC) -Fo$@ \
		-DBUILD_TYPE=\"$(BUILD_TYPE)\" $** \
		-DERL_RUN_SHARED_LIB=1

#  $(ETCOBJDIR)\dll_erl.res: $(ETCDIR)\dll_erl.rc
# 	rc -Fo$@ $<

$(ETCOBJDIR)\dll_win_erlexec.obj: $(ETCDIR)\win_erlexec.c
	$(CC) $(ERL_CFLAGS) $(BROWSERETC) -Fo$@ \
		-DBUILD_TYPE=\"$(BUILD_TYPE)\" $(ETCDIR)\win_erlexec.c \
		-DERL_RUN_SHARED_LIB=1

$(ETCOBJDIR)\dll_werl.obj: $(GENETCDIR)\erlexec.c
	$(CC) $(ERL_CFLAGS) $(BROWSERETC) -Fo$@ \
		-DBUILD_TYPE=\"$(BUILD_TYPE)\" -DWIN32_WERL \
		$(GENETCDIR)\erlexec.c \
		-DERL_RUN_SHARED_LIB=1

$(ETCOBJDIR)\epmd.obj: $(GENETCDIR)\epmd.c
	$(CC) $(EPMDFLAGS) $(ERL_CFLAGS) $(BROWSERETC) \
		-Fo$(ETCOBJDIR)\epmd.obj $(GENETCDIR)\epmd.c

$(ETCOBJDIR)\epmd_cli.obj: $(GENETCDIR)\epmd_cli.c
	$(CC) $(EPMDFLAGS) $(ERL_CFLAGS) $(BROWSERETC) \
		-Fo$(ETCOBJDIR)\epmd_cli.obj $(GENETCDIR)\epmd_cli.c

$(ETCOBJDIR)\epmd_srv.obj: $(GENETCDIR)\epmd_srv.c
	$(CC) $(EPMDFLAGS) $(ERL_CFLAGS) $(BROWSERETC) \
		-Fo$(ETCOBJDIR)\epmd_srv.obj $(GENETCDIR)\epmd_srv.c

$(ETCOBJDIR)\erlc.obj: $(GENETCDIR)\erlc.c
	$(CC) $(ERL_CFLAGS) $(BROWSERETC) -Fo$(ETCOBJDIR)\erlc.obj \
		-I$(ERL_INTERFACE) $(GENETCDIR)\erlc.c

$(ETCOBJDIR)\inet_gethost.obj: $(GENETCDIR)\inet_gethost.c
	$(CC) $(ERL_CFLAGS) $(BROWSERETC) -Fo$(ETCOBJDIR)\inet_gethost.obj \
		$(GENETCDIR)\inet_gethost.c

# Tools used for building the emulator.

build_tools:	$(BINDIR)\mkpreload.exe $(BINDIR)\coffix.exe

$(BINDIR)\mkpreload.exe: $(OBJDIR)\mkpreload.obj

$(BINDIR)\coffix.exe: $(OBJDIR)\coffix.obj

# Explicit rules

$(OBJDIR)\coffix.obj: $(SYSDIR)\coffix.c
	$(CC) $(ERL_CFLAGS) -Fo$(OBJDIR)\coffix.obj $(SYSDIR)\coffix.c

$(TARGET)\driver_tab.c:
	perl utils\make_driver_tab -o $@ $(DRVOBJS)

$(OBJDIR)\driver_tab.obj: $(TARGET)\driver_tab.c
	$(CC) $(ERL_CFLAGS) -Fo$(OBJDIR)\driver_tab.obj $(TARGET)\driver_tab.c

$(TARGET)\erl_bif_table.c $(TARGET)\erl_bif_table.h \
$(TARGET)\erl_atom_table.c $(TARGET)\erl_atom_table.h \
$(TARGET)\erl_pbifs.c: \
	beam\bif.tab beam\atom.names
	perl utils\make_tables -src $(TARGET) -include $(TARGET) beam\atom.names beam\bif.tab

$(OBJDIR)\erl_atom_table.obj: $(TARGET)\erl_atom_table.c
	$(CC) $(ERL_CFLAGS) -Fo$(OBJDIR)\ $(TARGET)\erl_atom_table.c

$(OBJDIR)\erl_pbifs.obj: $(TARGET)\erl_pbifs.c
	$(CC) $(ERL_CFLAGS) -Fo$(OBJDIR)\ $(TARGET)\erl_pbifs.c

$(TARGET)\erl_version.h: ../vsn.mk
	perl utils\make_version -o $@ $(VSN)$(SERIALNO) $(TARGET)

$(BEAMS_RES): $(BOOTBEAMS) $(ETCDIR)\erlang.ico $(BINDIR)\mkpreload.exe
	$(BINDIR)\mkpreload.exe -rc -o $(TARGET)\beams.rc $(BOOTBEAMS)
	$(RC) -Fo $@  -I $(ETCDIR) $(TARGET)\beams.rc

$(ERL_RES): $(ETCDIR)\erl.rc $(ETCDIR)\erlang.ico $(ETCDIR)\erl_icon.ico $(ETCDIR)\hrl_icon.ico $(ETCDIR)\beam_icon.ico
	$(RC) -Fo $@ $(ERL_DEFINES) $(ETCDIR)\erl.rc

$(BEAM_RES): $(ETCDIR)\beam.rc $(ETCDIR)\erlang.ico $(ETCDIR)\erl_icon.ico $(ETCDIR)\hrl_icon.ico $(ETCDIR)\beam_icon.ico
	$(RC) -Fo $@ $(ERL_DEFINES) $(ETCDIR)\beam.rc

$(ETCDIR)\beam_icon.ico: $(ETCDIR)\jam_icon.ico
	copy $(ETCDIR)\jam_icon.ico $(ETCDIR)\beam_icon.ico
$(ETCDIR)\beam.rc: $(ETCDIR)\jam.rc
	copy $(ETCDIR)\jam.rc $(ETCDIR)\beam.rc

$(OBJDIR)\bif.obj: $(TARGET)\erl_bif_table.h $(TARGET)\erl_version.h

$(OBJDIR)\break.obj: $(TARGET)\erl_version.h

#
# Implicit rules
#
{$(ETCOBJDIR)}.obj{$(BINDIR)}.exe:
	$(CC) $(ERL_LFLAGS) -Fe$@ $** $(ENTRY_OBJ) $(ERL_RES) \
	$(ERL_ENTRY_LFLAGS) 

{$(OBJDIR)}.obj{$(BINDIR)}.exe:
	$(CC) $(ERL_LFLAGS) -Fe$@ $** $(ERL_RES)

{$(DRVDIR)}.c{$(OBJDIR)}.obj:
    $(CC) $(ERL_CFLAGS) -Fo$(OBJDIR)\ $<

{$(UTILDIR)}.c{$(OBJDIR)}.obj:
    $(CC) $(ERL_CFLAGS) -Fo$(OBJDIR)\ $<

{$(GENDRVDIR)}.c{$(OBJDIR)}.obj:
    $(CC) $(ERL_CFLAGS) -Fo$(OBJDIR)\ $<

{$(SYSDIR)}.c{$(OBJDIR)}.obj:
    $(CC) $(ERL_CFLAGS) -Fo$(OBJDIR)\ $<

{$(ETCDIR)}.c{$(ETCOBJDIR)}.obj:
    $(CC) $(ERL_CFLAGS) -Fo$(ETCOBJDIR)\ $<

{$(DRVDIR)}.c{$(ETCOBJDIR)}.obj:
    $(CC) $(ERL_CFLAGS) -Fo$(ETCOBJDIR)\ $<

{$(BEAMDIR)}.c{$(OBJDIR)}.obj:
    $(CC) $(ERL_CFLAGS) -Fo$(OBJDIR)\ $<

{$(TARGET)}.c{$(OBJDIR)}.obj:
    $(CC) $(ERL_CFLAGS) -Fo$(OBJDIR)\ $<

{$(ZLIBDIR)}.c{$(OBJDIR)}.obj:
    $(CC) $(ERL_CFLAGS_COMMON) -Ox -Fo$(OBJDIR)\ $<

clean:
	-@del $(BINDIR)\*.exe
	-@del $(BINDIR)\*.pdb
	-@del $(BINDIR)\*.ilk
	-@del $(BEAMDIR)\*.bsc
	-@del $(TARGET)\*.bsc
	-@del $(OBJDIR)\*.obj
	-@del $(OBJDIR)\*.o
	-@del $(OBJDIR)\*.sbr
	-@del $(OBJDIR)\*.res
	-@del $(ETCOBJDIR)\*.obj
	-@del $(ETCOBJDIR)\*.sbr
	-@del $(TARGET)\*.c
	-@del $(TARGET)\*.h
	-@del $(ERL_RUNTIME_LIB)
	-@del $(TARGET)\driver_tab.c
	-@del $(TARGET)\erl_version.h
