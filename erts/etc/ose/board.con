/*
 ****************************************************************************
 *                            Configuration
 *
 *     $Workfile:   board.con  $
 *     Document no: @(#) 560/OSE66-33 $Revision:   1.7  $
 *     $Author:   crni  $
 *     $Date:   09/30/99 16:35:04  $
 *
 *       Copyright (C) 1997 by ENEA OSE SYSTEMS AB. All rights reserved.
 *
 ****************************************************************************

 	CONTENTS
	--------

	1  Description
	2  History of development
	3  Include files
	4  Manifest constants
	5  Macros

 ****************************************************************************
 */

#ifndef _BOARD_CON
#define _BOARD_CON

/*
 ****************************************************************************
 * 1  DESCRIPTION.
 ****************************************************************************
 *
 * This file contains configurations for the Force PowerCore+ BSP.
 *
 */

/*
 ****************************************************************************
 * 2  HISTORY OF DEVELOPMENT.
 *
 *    $Log:   /rtt/pvcsarch/OSE66/src/boards/powercorep/board.cov  $
   
      Rev 1.7   09/30/99 16:35:04   crni
   
      Rev 1.6   09/30/99 16:30:40   crni
   
      Rev 1.5   05/19/99 10:36:48   crni
   
      Rev 1.4   05/18/99 13:49:46   crni
   
      Rev 1.3   09/29/98 17:07:08   geku
   
      Rev 1.2   09/29/98 17:05:38   geku
   
      Rev 1.1   08/11/98 15:45:52   jego
   Added create- and kill handlers
   
      Rev 1.0   03/26/98 16:15:34   geku
   Initial revision.
   
      Rev 1.0   03/26/98 15:59:54   geku
   Initial revision.
   
 */


/*
***************************************************************************
** BOARD SPECIFIC DEFINITIONS  -- CONFIGURABLE
**
** Definitions configurable by user, implementer 
**
***************************************************************************
*/

#define CHRP_MAP   1      /* 1=chrp 0=prep (mapA) */


/*
** ------------------------------------------------
** This is a delay parameter for the i82559(er)
** Ethernet chip. It specifies how long the driver
** should wait for a command to finish.
**
**
** For the G3 (750)
**     Set to 0x5000 when using a 10 mbit link and to 
**     0x1100 when using a 100 mbit link. (Try a higher 
**     number if the transmitter fails)
**
** For the G4 (7400) use 0x140 for 100 mbit link
**
** Example: #define I82559_DELAY 0x1100
** ------------------------------------------------
*/

/* #define I82559_DELAY 0x140   */
#define I82559_DELAY 0x1100 	
 



/*
** ------------------------------------------------
** PCORE Device System IRQ Priorities
** Change as needed for optimum system response.
** Priorities range from 0-15 with 0 highest prio
** ------------------------------------------------
*/
/* PCORE-680 Priorities */
#define i82559_PRIORITY_1  4      /* ethernet */
#define i82559_PRIORITY_0  5      /* ethernet */
#define UD16550_PRIORITY0 12      /* Serial COM1 */
#define UD16550_PRIORITY1 11      /* Serial COM2 */

/* 
** -----------------------------------------------------------------
** PCI interrupt Routing
** Interrupt routing is determined by the software implementer. 
** PCI Ints may be routed to one of any UNUSED IRQs (0-15).
**
** Typical Default for PCI ints mapped to IRQs is as follows:
** INTA --> IRQ10 (10)
** INTB --> IRQ11 (11)
** INTC --> IRQ12 (12)
** INTD --> IRQ13 (13)
**
** -- Assign values so no conflicts with hardwired ISA vectors (below)
** -- Assignments must be limited to the following level capable IRQs
**    IRQ3, IRQ4, IRQ5, IRQ6, IRQ7, IRQ9, IRQ10, IRQ12, IRQ14, IRQ15
**   
** 
**
** -----------------------------------------------------------------
*/
/* PCORE-680 Interrupt routing 
   Limited to IRQs 5,9,10,11,12 */
#define INTA_ROUTE_CHANNEL           9  
#define INTB_ROUTE_CHANNEL          10
#define INTC_ROUTE_CHANNEL          11
#define INTD_ROUTE_CHANNEL          12
#define IDE_PRIMARY_ROUTE_CHANNEL   14
#define IDE_SECONDARY_ROUTE_CHANNEL 15   /* 15 default */









/*////////////////////////////////////////////////////////////*/
/* DO NOT CHANGE ANYTHING BELOW THIS LINE -- NOT CONFIGURABLE */
/*////////////////////////////////////////////////////////////*/










/*
***************************************************************************
**
** BOARD SPECIFIC DEFINITIONS -- NOT CONFIGURABLE
**
** Constant definitions that depend on hardwired parmaters (not
** configurable by user )
**
***************************************************************************
*/

/*
 ***************************************************************************
 * UD16550_REGOFFSET
 *
 * The offset between the UD16550 registers.
 *
 * Example: #define UD16550_REGOFFSET 1
 ***************************************************************************
 */

#define UD16550_REGOFFSET 1

/*
 ***************************************************************************
 * UD16550_SERCLK
 *
 * Clock that drives the baud rate generation in the PC87308 UART.
 * 
 * Example: #define UD16550_SERCLK 1846200
 ***************************************************************************
 */

#define UD16550_SERCLK 1846200


#if CHRP_MAP

/* Address Map B -- CHRP */
#define CPU_SYS_MEM_BASE    0x00000000
#define CPU_PCI_MEM_BASE    0x80000000
#define CPU_PCIISA_MEM_BASE 0xFD000000
#define CPU_PCIISA_IO_BASE  0xFE000000
#define CPU_PCI_IO_BASE     0xFE800000
#define PCI_CFGADDR_REG     0xFEC00000
#define PCI_CFGDATA_REG     0xFEE00000
#define PCI_INTACK          0xFEF00000
#define SYSROM_BASE_0       0xFF000000
#define SYSROM_BASE_1       0xFF800000

#else

!! PREP not used, as of yet !! 

/* Address Map A -- PREP */
#define CPU_SYS_MEM_BASE    0x00000000
#define CPU_PCIISA_IO_BASE  0x80000000
#define PCI_CFGADDR_REG     0x80000CF8   /* contiguous mode */
#define PCI_CFGDATA_REG     0x80000CFC
#define CPU_PCICFG_DIRECT   0x80800000
#define CPU_PCI_IO_BASE     0x81000000
#define PCI_INTACK          0xBFFFFFF0
#define CPU_PCI_MEM_BASE    0xC0000000
#define CPU_PCIISA_MEM_BASE 0xC0000000
#define SYSROM_BASE_0       0xFF000000
#define SYSROM_BASE_1       0xFF800000

#endif

/* 
** --------------------------------------------------------------------
** Interrupt bonding
** -- Interrupt bonding is essentially determined by the hardware
** designer.  There really is no convenient way of determining if 
** a PCI device INTA(ie) is bonded to PCI INTA,B,C or D.  This fact is 
** implied by PCI spec that allows evenly distributed multiple PCI 
** interrupts to the interrupt router.  
** -- So if there are multiple device(s) with INTA ... be forewarned.
**
** (ie) Force Powercore ethernet INTA (Interrupt_Pin=1) is bonded to 
** PCI INTB probably due to another INTA device.
**
** These settings should not change !  To change IRQs of PCI devices
** visit interrupt routing info above.
**
** -- stim
**
** --------------------------------------------------------------------
*/
/* PCORE-680 DO NOT CHANGE */
#define i82559_VECTOR_1         INTA_ROUTE_CHANNEL
#define i82559_VECTOR_0         INTB_ROUTE_CHANNEL  
#define PMC_SLOT1_VECTOR        INTC_ROUTE_CHANNEL
#define PMC_SLOT2_VECTOR        INTD_ROUTE_CHANNEL




/* 
** ----------------------------------------------------
** PCORE-680 ISA Hardwired Vectors -- DO NOT CHANGE 
** ----------------------------------------------------
*/
#define PMC_INT1_VECTOR   1
#define UD16550_VECTOR1   3    /* */
#define UD16550_VECTOR0   4    /* */
#define PMC_INT2_VECTOR   5
#define UD16550_VECTOR2   6    /* */
#define UD16550_VECTOR3   6    /* */
#define PMC_INT3_VECTOR   6
#define PMC_INT4_VECTOR   7
#define WATCHDOG_VECTOR   8
#define UD16550_VECTOR4  12    /* */
#define UD16550_VECTOR5  12    /* */
#define PMC_INT5_VECTOR  12
#define Z8536_VECTOR     13
#define CPCI_ENUM_VECTOR 14


/* 
** --------------------------------------------
** PCORE ISA device(s)  DO NOT CHANGE
** Physical address and other general info.
** The following devices mapped in ISA space.
** ---------------------------------------------
*/

/* PCORE-680 NVRAM */
#define NVRAM_BASEADDR CPU_PCIISA_IO_BASE
#define NVRAM_ADDR_LSB (*(volatile U8 *)(NVRAM_BASEADDR + 0x73))
#define NVRAM_ADDR_MSB (*(volatile U8 *)(NVRAM_BASEADDR + 0x75))
#define NVRAM_DATA     (*(volatile U8 *)(NVRAM_BASEADDR + 0x77))
#define NVRAM_ETHERNET 0x1C13 /* The offset/address for Ethernet address. */

/* PCORE-680 Serial */
#define UD16550_BASEADDR0 CPU_PCIISA_IO_BASE+0x3f8
#define UD16550_BASEADDR1 CPU_PCIISA_IO_BASE+0x2f8
#define UD16550_BASEADDR2 CPU_PCIISA_IO_BASE+0x3e8
#define UD16550_BASEADDR3 CPU_PCIISA_IO_BASE+0x2e8
#define UD16550_BASEADDR4 CPU_PCIISA_IO_BASE+0x3d8
#define UD16550_BASEADDR5 CPU_PCIISA_IO_BASE+0x2d8



#define BSP_END_OF_INT() (bspEndOfInt())

#endif /* # ifndef _BOARD_CON */
