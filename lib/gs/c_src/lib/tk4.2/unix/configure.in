dnl	This file is an input file used by the GNU "autoconf" program to
dnl	generate the file "configure", which is run during Tk installation
dnl	to configure the system for the local environment.
AC_INIT(../generic/tk.h)
# SCCS: @(#) configure.in 1.68 96/10/02 14:04:05

TK_VERSION=4.2
TK_MAJOR_VERSION=4
TK_MINOR_VERSION=2
VERSION=${TK_VERSION}

if test "${prefix}" = "NONE"; then
    prefix=/usr/local
fi
if test "${exec_prefix}" = "NONE"; then
    exec_prefix=$prefix
fi

AC_PROG_RANLIB
AC_ARG_ENABLE(gcc, [  --enable-gcc            allow use of gcc if available],
    [tk_ok=$enableval], [tkl_ok=no])
dnl *** We need to use AC_PROG_CC to check that the c compiler works! ***
dnl if test "$tk_ok" = "yes"; then
    AC_PROG_CC
dnl else
dnl    CC=${CC-cc}
dnl AC_SUBST(CC)
dnl fi

AC_HAVE_HEADERS(unistd.h limits.h dlfcn.h)

# -----------------------------------------------------------------------
BUILD_DIR=`pwd`
cd ${srcdir}/..
TOP_DIR=`pwd`
cd ${BUILD_DIR}

AC_SUBST(TOP_DIR)
AC_SUBST(BUILD_DIR)
#--------------------------------------------------------------------
#	See if there was a command-line option for where Tcl is;  if
#	not, assume that its top-level directory is a sibling of ours.
#--------------------------------------------------------------------

AC_ARG_WITH(tcl, [  --with-tcl=DIR          use Tcl 7.6 binaries from DIR],
	TCL_LIB_DIR=$withval, TCL_LIB_DIR=`echo "${BUILD_DIR}" |sed -e "s/tk4.2/tcl7.6/"`)
if test ! -d "${TCL_LIB_DIR}" -o ! -f "${TCL_LIB_DIR}/tclConfig.sh"; then
    TCL_LIB_DIR="$exec_prefix/lib"
fi
if test ! -d $TCL_LIB_DIR; then
    AC_MSG_ERROR(Tcl directory $TCL_LIB_DIR doesn't exist)
fi

cd ${TCL_LIB_DIR}/..
TCL_TOP_DIR=`pwd`
cd ${BUILD_DIR}

#--------------------------------------------------------------------
#	Read in configuration information generated by Tcl for shared
#	libraries, and arrange for it to be substituted into our
#	Makefile.
#--------------------------------------------------------------------

file=$TCL_LIB_DIR/tclConfig.sh
. $file
CFLAGS=$TCL_CFLAGS
CXXFLAGS=$TCL_CXXFLAGS
CXX=$TCL_CXX
SHLIB_CFLAGS=`echo "${TCL_SHLIB_CFLAGS}" |sed -e "s|-fpic|-fPIC|" -e "s|-pic|-PIC|" -e "s|-K pic|-K PIC|" -e "s|-Kpic|-KPIC|" -e "s|+z|+Z|"`
SHLIB_CXXFLAGS=`echo "${TCL_SHLIB_CXXFLAGS}" |sed -e "s|-fpic|-fPIC|" -e "s|-pic|-PIC|" -e "s|-K pic|-K PIC|" -e "s|-Kpic|-KPIC|" -e "s|+z|+Z|"`
SHLIB_LD=$TCL_SHLIB_LD
SHLIB_LD_LIBS=$TCL_SHLIB_LD_LIBS
SHLIB_SUFFIX=$TCL_SHLIB_SUFFIX
SHLIB_VERSION=$TCL_SHLIB_VERSION
DL_LIBS=$TCL_DL_LIBS
LD_FLAGS=$TCL_LD_FLAGS

TCL_BASE=`echo ${TCL_LIB_SPEC} |sed -e "s|^.*-l||"`

case $TCL_BASE in
    *i)
	AC_DEFINE(ITCL_NAMESPACES)
	TCLSH="ish${TCL_VERSION}"
	WISH=iwish
	VERSION_SUFFIX=i
	;;
    *)
	WISH=wish
	TCLSH="tclsh${TCL_VERSION}"
	VERSION_SUFFIX=
	;;
esac
AC_SUBST(TCLSH)
AC_SUBST(WISH)
AC_SUBST(VERSION_SUFFIX)

if test -f ${TCL_LIB_DIR}/Makefile; then
    TCL_BIN_DIR=${TCL_LIB_DIR}
elif test -f ${TCL_LIB_DIR}/${TCLSH}; then
    TCL_BIN_DIR=${TCL_LIB_DIR}
elif test -f ${TCL_EXEC_PREFIX}/bin/${TCLSH}; then
    TCL_BIN_DIR=${TCL_EXEC_PREFIX}/bin
else
    TCL_BIN_DIR=$exec_prefix/bin
fi

if test -d ${TCL_TOP_DIR}/generic -a -f ${TCL_TOP_DIR}/generic/tcl.h; then
    TCL_INC_DIR=${TCL_TOP_DIR}/generic
elif test -d ${TCL_TOP_DIR}/include -a -f ${TCL_TOP_DIR}/include/tcl.h; then
    TCL_INC_DIR=${TCL_TOP_DIR}/include
elif test -d ${TCL_EXEC_PREFIX}/include -a -f ${TCL_EXEC_PREFIX}/include/tcl.h; then
    TCL_INC_DIR=${TCL_PREFIX}/include
else
    TCL_INC_DIR=$prefix/include
fi

if test -d ${TCL_TOP_DIR}/lib/tcl${TCL_VERSION} -a -f ${TCL_TOP_DIR}/lib/tcl${TCL_VERSION}/init.tcl; then
    TCL_LIBRARY=${TCL_TOP_DIR}/lib/tcl${TCL_VERSION}
elif test -d ${TCL_TOP_DIR}/library -a -f ${TCL_TOP_DIR}/library/init.tcl; then
    TCL_LIBRARY=${TCL_TOP_DIR}/library
elif test -d ${TCL_PREFIX}/lib/tcl${TCL_VERSION} -a -f ${TCL_TOP_DIR}/tcl${TCL_VERSION}/init.tcl; then
    TCL_LIBRARY=${TCL_PREFIX}/lib/tcl${TCL_VERSION}
else
    TCL_LIBRARY=$prefix/lib/tcl${TCL_VERSION}
fi

TCL_LIB_SPEC="-L${TCL_LIB_DIR} -l${TCL_BASE}"
VERSION=""
eval "TCL_UNSHARED_LIB_FILE=lib${TCL_BASE}${TCL_UNSHARED_LIB_SUFFIX}"
eval "TCL_SHARED_LIB_FILE=lib${TCL_BASE}${TCL_SHARED_LIB_SUFFIX}"

#--------------------------------------------------------------------
#	Supply a substitute for stdlib.h if it doesn't define strtol,
#	strtoul, or strtod (which it doesn't in some versions of SunOS).
#--------------------------------------------------------------------

AC_MSG_CHECKING(stdlib.h)
AC_HEADER_EGREP(strtol, stdlib.h, tk_ok=yes, tk_ok=no)
AC_HEADER_EGREP(strtoul, stdlib.h, , tk_ok=no)
AC_HEADER_EGREP(strtod, stdlib.h, , tk_ok=no)
if test $tk_ok = no; then
    AC_DEFINE(NO_STDLIB_H)
fi
AC_MSG_RESULT($tk_ok)

#--------------------------------------------------------------------
#	Check for various typedefs and provide substitutes if
#	they don't exist.
#--------------------------------------------------------------------

AC_MODE_T
AC_PID_T
AC_SIZE_T
AC_UID_T

#--------------------------------------------------------------------
#	Locate the X11 header files and the X11 library archive.  Try
#	the ac_path_x macro first, but if it doesn't find the X stuff
#	(e.g. because there's no xmkmf program) then check through
#	a list of possible directories.  Under some conditions the
#	autoconf macro will return an include directory that contains
#	no include files, so double-check its result just to be safe.
#--------------------------------------------------------------------

AC_PATH_X
not_really_there=""
if test "$no_x" = ""; then
    if test "$x_includes" = ""; then
	AC_TRY_CPP([#include <X11/XIntrinsic.h>], , not_really_there="yes")
    else
	if test ! -r $x_includes/X11/Intrinsic.h; then
	    not_really_there="yes"
	fi
    fi
fi
if test "$no_x" = "yes" -o "$not_really_there" = "yes"; then
    AC_MSG_CHECKING(for X11 header files)
    XINCLUDES="# no special path needed"
    AC_TRY_CPP([#include <X11/Intrinsic.h>], , XINCLUDES="nope")
    if test "$XINCLUDES" = nope; then
        dirs="/usr/unsupported/include /usr/local/include /usr/X386/include /usr/include/X11R4 /usr/X11R5/include /usr/include/X11R5 /usr/openwin/include /usr/X11/include /usr/sww/include"
        for i in $dirs ; do
	    if test -r $i/X11/Intrinsic.h; then
		AC_MSG_RESULT($i)
	        XINCLUDES=" -I$i"
		break
	    fi
        done
    fi
else
    if test "$x_includes" != ""; then
	XINCLUDES=-I$x_includes
    else
	XINCLUDES="# no special path needed"
    fi
fi
if test "$XINCLUDES" = nope; then
    AC_MSG_RESULT(couldn't find any!)
    XINCLUDES="# no include files found"
fi

if test "$no_x" = yes; then
    AC_MSG_CHECKING(for X11 libraries)
    XLIBSW=nope
    dirs="/usr/unsupported/lib /usr/local/lib /usr/X386/lib /usr/lib/X11R4 /usr/X11R5/lib /usr/lib/X11R5 /usr/X11R6/lib /usr/lib/X11R6 /usr/openwin/lib /usr/X11/lib /usr/sww/X11/lib"
    for i in $dirs ; do
	if test -r $i/libX11.a -o -r $i/libX11.so -o -r $i/libX11.sl; then
	    AC_MSG_RESULT($i)
	    XLIBSW="-L$i -lX11"
	    x_libraries="$i"
	    break
	fi
    done
else
    if test "$x_libraries" = ""; then
	XLIBSW=-lX11
    else
	XLIBSW="-L$x_libraries -lX11"
    fi
fi
if test "$XLIBSW" = nope ; then
    AC_CHECK_LIB(Xwindow, XCreateWindow, XLIBSW=-lXwindow)
fi
if test "$XLIBSW" = nope ; then
    AC_MSG_RESULT(couldn't find any!  Using -lX11.)
    XLIBSW=-lX11
fi

#--------------------------------------------------------------------
#	If the X library binaries are in a non-standard directory, and
#	if a mechanism such as -R is available on this platform for
#	specifying a runtime search path for shared libraries, add the X
#	library location into that search path.
#--------------------------------------------------------------------

X11_LIB_DIR=`echo ${XLIBSW} |sed -e "s|-L||" -e "s/ .*$//g" -e "s/-l.*$//g" -e "s|/libX11.*$||" -e "s|/libXhp11.*$||"`
LIB_RUNTIME_DIR='${LIB_RUNTIME_DIR}'
if test "x${X11_LIB_DIR}" != "x"; then
    LIB_RUNTIME_DIR="${LIB_RUNTIME_DIR}:${X11_LIB_DIR}"
fi
if test "${TCL_LD_SEARCH_FLAGS}" = '-L${LIB_RUNTIME_DIR}'; then
    LIB_RUNTIME_DIR=`echo ${LIB_RUNTIME_DIR} |sed -e 's/:/ -L/g'`
fi
export LIB_RUNTIME_DIR; \
eval "TK_CC_SEARCH_FLAGS=\"$TCL_LD_SEARCH_FLAGS\""
TK_LD_SEARCH_FLAGS=`echo ${TK_CC_SEARCH_FLAGS} |sed -e "s|-Wl,||g" -e "s|,| |g"`

AC_SUBST(X11_LIB_DIR)
case $TCL_BASE in
    *i)
	LIB_RUNTIME_DIR="$exec_prefix/lib/itcl"
	;;
    *)
	LIB_RUNTIME_DIR="$exec_prefix/lib"
	;;
esac
AC_SUBST(LIB_RUNTIME_DIR)

#--------------------------------------------------------------------
#	Check for the existence of various libraries.  The order here
#	is important, so that then end up in the right order in the
#	command line generated by make.  The -lsocket and -lnsl libraries
#	require a couple of special tricks:
#	1. Use "connect" and "accept" to check for -lsocket, and
#	   "gethostbyname" to check for -lnsl.
#	2. Use each function name only once:  can't redo a check because
#	   autoconf caches the results of the last check and won't redo it.
#	3. Use -lnsl and -lsocket only if they supply procedures that
#	   aren't already present in the normal libraries.  This is because
#	   IRIX 5.2 has libraries, but they aren't needed and they're
#	   bogus:  they goof up name resolution if used.
#	4. On some SVR4 systems, can't use -lsocket without -lnsl too.
#	   To get around this problem, check for both libraries together
#	   if -lsocket doesn't work by itself.
#--------------------------------------------------------------------

AC_CHECK_LIB(Xbsd, main, [LIBS="$LIBS -lXbsd"])

tk_checkBoth=0
AC_CHECK_FUNC(connect, tk_checkSocket=0, tk_checkSocket=1)
if test "$tk_checkSocket" = 1; then
    AC_CHECK_LIB(socket, main, LIBS="$LIBS -lsocket", tk_checkBoth=1)
fi
if test "$tk_checkBoth" = 1; then
    tk_oldLibs=$LIBS
    LIBS="$LIBS -lsocket -lnsl"
    AC_CHECK_FUNC(accept, tk_checkNsl=0, [LIBS=$tk_oldLibs])
fi
AC_CHECK_FUNC(gethostbyname, , AC_CHECK_LIB(nsl, main, [LIBS="$LIBS -lnsl"]))

#--------------------------------------------------------------------
# One more check related to the X libraries.  The standard releases
# of Ultrix don't support the "xauth" mechanism, so send won't work
# unless TK_NO_SECURITY is defined.  However, there are usually copies
# of the MIT X server available as well, which do support xauth.
# Check for the MIT stuff and use it if it exists.
#
# Note: can't use ac_check_lib macro (at least, not in Autoconf 2.1)
# because it can't deal with the "-" in the library name.
#--------------------------------------------------------------------

if test -d /usr/include/mit ; then
    AC_MSG_CHECKING([MIT X libraries])
    tk_oldCFlags=$CFLAGS
    CFLAGS="$CFLAGS -I/usr/include/mit"
    tk_oldLibs=$LIBS
    LIBS="$LIBS -lX11-mit"
    AC_TRY_LINK([
	#include <X11/Xlib.h>
    ], [
	XOpenDisplay(0);
    ], [
	AC_MSG_RESULT(yes)
	XLIBSW="-lX11-mit"
	XINCLUDES="-I/usr/include/mit"
    ], AC_MSG_RESULT(no))
    CFLAGS=$tk_oldCFlags
    LIBS=$tk_oldLibs
fi

#--------------------------------------------------------------------
#	On a few very rare systems, all of the libm.a stuff is
#	already in libc.a.  Set compiler flags accordingly.
#	Also, Linux requires the "ieee" library for math to
#	work right (and it must appear before "-lm").
#--------------------------------------------------------------------

MATH_LIBS=""
AC_CHECK_FUNC(sin, , MATH_LIBS="-lm")
AC_CHECK_LIB(ieee, main, [MATH_LIBS="-lieee $MATH_LIBS"])

#--------------------------------------------------------------------
#	If this system doesn't have a memmove procedure, use memcpy
#	instead.
#--------------------------------------------------------------------

AC_CHECK_FUNC(memmove, , [AC_DEFINE(memmove, memcpy)])

#--------------------------------------------------------------------
#	Figure out whether "char" is unsigned.  If so, set a
#	#define for __CHAR_UNSIGNED__.
#--------------------------------------------------------------------

AC_C_CHAR_UNSIGNED

#--------------------------------------------------------------------
#	Under Solaris 2.4, strtod returns the wrong value for the
#	terminating character under some conditions.  Check for this
#	and if the problem exists use a substitute procedure
#	"fixstrtod" (provided by Tcl) that corrects the error.
#--------------------------------------------------------------------

AC_CHECK_FUNC(strtod, tk_strtod=1, tk_strtod=0)
if test "$tk_strtod" = 1; then
    AC_MSG_CHECKING([for Solaris 2.4 strtod bug])
    AC_TRY_RUN([
	extern double strtod();
	int main()
	{
	    char *string = "NaN";
	    char *term;
	    strtod(string, &term);
	    if ((term != string) && (term[-1] == 0)) {
		exit(1);
	    }
	    exit(0);
	}], tk_ok=1, tk_ok=0, tk_ok=0)
    if test "$tk_ok" = 1; then
	AC_MSG_RESULT(ok)
    else
	AC_MSG_RESULT(buggy)
	AC_DEFINE(strtod, fixstrtod)
    fi
fi

#--------------------------------------------------------------------
#	The statements below define a collection of symbols related to
#	building libtk as a shared library instead of a static library.
#--------------------------------------------------------------------

if test "x${SHLIB_LD_LIBS}" = "xAlwaysFalse"; then
    SHLIB_CFLAGS="-DSUN4_SHLIB_BUG ${SHLIB_CFLAGS}"
fi

if test "x${SHLIB_CFLAGS}" != "x"; then
    SHOBJ_SUFFIX="..o"
else
    SHOBJ_SUFFIX=".o"
fi

VERSION="${TK_VERSION}${VERSION_SUFFIX}"

AC_ARG_ENABLE(shared,
    [  --enable-shared         build libtk as a shared library],
    [ok=$enableval], [ok=no])
if test "$ok" = "yes" -a "${SHLIB_SUFFIX}" != ""; then
    TK_SHLIB_CFLAGS="${SHLIB_CFLAGS}"
    eval "TK_LIB_FILE=libtk${TCL_SHARED_LIB_SUFFIX}"
    TEST_BINARY="${WISH}"
    TEST_SHLIB="Tktest${SHLIB_SUFFIX} Tksquare${SHLIB_SUFFIX}"
else
    TK_SHLIB_CFLAGS=""
    eval "TK_LIB_FILE=libtk${TCL_UNSHARED_LIB_SUFFIX}"
    TEST_BINARY="tktest"
    TEST_SHLIB=""
fi

# Note:  in the following variable, it's important to use the absolute
# path name of the Tcl directory rather than "..":  this is because
# AIX remembers this path and will attempt to use it at run-time to look
# up the Tcl library.

if test "${TCL_LIB_VERSIONS_OK}" = "ok"; then
    TK_BUILD_LIB_SPEC="-L`pwd` -ltk${VERSION}"
    TK_LIB_SPEC="-L${LIB_RUNTIME_DIR} -ltk${VERSION}"
else
    TK_BUILD_LIB_SPEC="-L`pwd` -ltk`echo ${VERSION} | tr -d .`"
    TK_LIB_SPEC="-L${LIB_RUNTIME_DIR} -ltk`echo ${VERSION} | tr -d .`"
fi

#
# Test if there are shared versions of the math and c libraries.
#

SHARED_LIBS=""
if test "x${SHLIB_SUFFIX}" = "x..o" -o "x${SHLIB_SUFFIX}" = "x.a"; then
    if test "x${SHLIB_CFLAGS}" = "x-G 0"; then
	TEST_SUFFIX="_G0.a"
    else
	TEST_SUFFIX=".a"
    fi
else
    if test "x${TCL_SHARED_LIB_SUFFIX}" = 'x${VERSION}.a' -a "x${SHLIB_SUFFIX}" = "x.so"; then
	TEST_SUFFIX=".a"
	SHARED_LIBS="${TCL_LIB_SPEC}"
	SHARED_TK_LIB="${TK_BUILD_LIB_SPEC}"
    else
	TEST_SUFFIX="${SHLIB_SUFFIX}"
    fi
fi

dirs="/lib/libm${TEST_SUFFIX}* /usr/lib/libm${TEST_SUFFIX}*"
for i in $dirs ; do
    if test -f $i; then
	SHARED_LIBS="${SHARED_LIBS} -lm"
	break;
    fi
done
dirs="/lib/libc${TEST_SUFFIX}* /usr/lib/libc${TEST_SUFFIX}*"
for i in $dirs ; do
    if test -f $i; then
	SHARED_LIBS="${SHARED_LIBS} -lc"
	break;
    fi
done
AC_SUBST(SHARED_LIBS)

if test "${TCL_SHARED_LIB_SUFFIX}" = '${VERSION}.a' -a "${SHLIB_SUFFIX}" = ".so"; then
    eval TCL_UNSHARED_LIB_FILE="lib${TCL_BASE}.a"
    eval TCL_SHARED_LIB_FILE="lib${TCL_BASE}.a"
fi

eval "TK_SHARED_LIB_FILE=libtk${TCL_SHARED_LIB_SUFFIX}"
eval "TK_UNSHARED_LIB_FILE=libtk${TCL_UNSHARED_LIB_SUFFIX}"

SHARED_X_LIB=""
dirs="$X11_LIB_DIR/libX11${TEST_SUFFIX}* /usr/openwin/lib/libX11${TEST_SUFFIX}* /usr/X11/lib/libX11${TEST_SUFFIX}* /usr/X11R5/lib/libX11${TEST_SUFFIX}* /usr/X11R6/lib/libX11${TEST_SUFFIX}* /usr/local/lib/libX11${TEST_SUFFIX}* /usr/lib/libX11${TEST_SUFFIX}* /lib/libX11${TEST_SUFFIX}*"
for i in $dirs ; do
    if test -f $i; then
	SHARED_X_LIB="${XLIBSW}"
	break;
    fi
done
if test "x${SHARED_X_LIB}" = "x"; then
    TK_LD_FLAGS="-u XCreateFontCursor -u XDrawImageString -u XDrawPoint -u XDrawPoints \
	-u XDrawSegments -u XFetchBuffer -u XFetchName -u XListProperties -u XLowerWindow \
	-u XMapRaised -u XPutImage -u XQueryColor -u XQueryTextExtents -u XQueryTree \
	-u XReparentWindow -u XRotateBuffers -u XSetBackground -u XSetFillStyle -u XSetFont \
	-u XSetLineAttributes -u XSetStipple -u XStoreBuffer -u XUndefineCursor"
else
    TK_LD_FLAGS=""
fi
AC_SUBST(TK_LD_FLAGS)

if test "x${XLIBSW}" != "x" ; then
    SHARED_TK_LIB="${SHARED_TK_LIB} \${X11_LIB_SWITCHES}"
fi
AC_SUBST(SHARED_X_LIB)
AC_SUBST(SHARED_TK_LIB)

#--------------------------------------------------------------------
# Check if libtcl.a contains a definition of Tcl_InitStandAlone()
#--------------------------------------------------------------------
STANDALONE_FLAGS="-DTk_Init=Tk_InitStandAlone -DTcl_Init=Tcl_InitStandAlone"
TCL2C_RULE=".tcl.c"
INDEX_RULE='${TOP_DIR}/library/tclIndex.h'
AC_MSG_CHECKING([standalone support of Tcl])
if test -f "$TCL_LIB_DIR/${TCL_UNSHARED_LIB_FILE}"; then
    x=`nm -p $TCL_LIB_DIR/${TCL_UNSHARED_LIB_FILE} |grep 'Tcl_InitStandAlone'`
    if test "x$x" != "x"; then
	AC_MSG_RESULT([yes])
    else
	AC_MSG_RESULT([no])
	echo "== Warning: Your ${TCL_UNSHARED_LIB_FILE} has no standalone support."
	echo "   ${WISH}.standalone can still be created, but the"
	echo "   Tcl library will not be compiled into it."
	echo ""
	echo "   A patch for Tcl${TCL_VERSION} to correct this is available as:"
	echo "       ftp://ftp.nici.kun.nl/pub/tkpvm/tcl${TCL_VERSION}plus.patch.gz"
	echo ""
	STANDALONE_FLAGS="-DTk_Init=Tk_InitStandAlone"
	TCL2C_RULE="not-used_1"
	INDEX_RULE="not_used_2"
    fi
else
    AC_MSG_RESULT([don't know])
    echo "== Warning: Your ${TCL_UNSHARED_LIB_FILE} is not yet created in the directory"
    echo "   $TCL_LIB_DIR, so I cannot determine this."
    echo "   For now I just assume there is standalone support."
    echo "   If you get an error later during the build of ${WISH}.standalone,"
    echo "   then first compile Tcl${TCL_VERSION} with standalone support."
fi
AC_SUBST(STANDALONE_FLAGS)
AC_SUBST(TCL2C_RULE)
AC_SUBST(INDEX_RULE)

if test "$SHLIB_SUFFIX" = "..o" -o "$SHLIB_SUFFIX" = ".a"; then
    TK_SHLIB_SOBJS='libtk${SHOBJ_SUFFIX}'
else
    TK_SHLIB_SOBJS='${SOBJS}'
fi

#------------------------------------------------------------------------------
# Test for UnixWare -o bug.  Macros are used in targets to build the shared
# objects.
#------------------------------------------------------------------------------
AC_MSG_CHECKING([for UnixWare -o bug])
rm -rf conftest*
cat > conftest.$ac_ext <<EOF
int main() { return 0; }
EOF
${CC-cc} -c -o conftest..o conftest.$ac_ext
if test -f conftest..o; then
    OBJ_SAVE="@:"
    OBJ_RESTORE="@:"
    CC_SHOBJ_FLAG='-o $@'
    AC_MSG_RESULT([OK])
else
    OBJ_SAVE='@if test -f $*o ; then rm -f $*sav; mv $*o $*sav; fi;'
    OBJ_RESTORE='@mv $*o $@; if test -f $*save ; then mv $*save $*o; fi;'
    CC_SHOBJ_FLAG=""
    AC_MSG_RESULT([buggy])
fi
rm -rf conftest*

AC_SUBST(OBJ_SAVE)
AC_SUBST(OBJ_RESTORE)
AC_SUBST(CC_SHOBJ_FLAG)

AC_SUBST(CXX)
AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(SHLIB_CXXFLAGS)
AC_SUBST(SHOBJ_SUFFIX)
AC_SUBST(DL_RUNTIME_NAME)
AC_SUBST(TEST_BINARY)
AC_SUBST(TEST_SHLIB)
if test "$TK_UNSHARED_LIB_FILE" = "$TK_SHARED_LIB_FILE" ; then
    TK_BUILD_UNSHARED="dont_build_unshared"
    TK_BUILD_STANDALONE="tkInitSA.o"
else
    TK_BUILD_UNSHARED='${TK_UNSHARED_LIB_FILE}'
    TK_BUILD_STANDALONE='tkInitDSA${SHOBJ_SUFFIX}'
fi
AC_SUBST(TK_BUILD_STANDALONE)
AC_SUBST(TK_BUILD_UNSHARED)
AC_SUBST(TK_SHARED_LIB_FILE)
AC_SUBST(TK_UNSHARED_LIB_FILE)
AC_SUBST(TCL_SHARED_LIB_FILE)
AC_SUBST(TCL_UNSHARED_LIB_FILE)
AC_SUBST(TK_SHLIB_SOBJS)
AC_SUBST(TK_CC_SEARCH_FLAGS)

AC_SUBST(CC)
AC_SUBST(DL_LIBS)
AC_SUBST(LD_FLAGS)
AC_SUBST(MATH_LIBS)
AC_SUBST(MAKE_LIB)
AC_SUBST(SHLIB_CFLAGS)
AC_SUBST(SHLIB_LD)
AC_SUBST(SHLIB_LD_LIBS)
AC_SUBST(SHLIB_SUFFIX)
AC_SUBST(TCL_BIN_DIR)
AC_SUBST(TCL_LIB_SPEC)
AC_SUBST(TCL_LIBS)
AC_SUBST(TCL_LIBRARY)
AC_SUBST(TCL_LIB_DIR)
AC_SUBST(TCL_INC_DIR)
AC_SUBST(TCL_VERSION)
AC_SUBST(TK_BUILD_LIB_SPEC)
AC_SUBST(TK_LD_SEARCH_FLAGS)
AC_SUBST(TK_LIB_FILE)
AC_SUBST(TK_LIB_SPEC)
AC_SUBST(TK_MAJOR_VERSION)
AC_SUBST(TK_MINOR_VERSION)
AC_SUBST(TK_SHLIB_CFLAGS)
AC_SUBST(TK_VERSION)
AC_SUBST(XINCLUDES)
AC_SUBST(XLIBSW)

chmod 555 ${TOP_DIR}/unix/pkgInstall.tcl
chmod 555 ${TOP_DIR}/unix/mkinstalldirs

AC_OUTPUT(Makefile tkConfig.sh pkgIndex.tcl)
