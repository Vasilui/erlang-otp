dnl	Merge of tcl7.6/unix/configure.in & tk4.2/unix/cofigure.in
dnl     for building Erlang binding to Tcl/Tk (etk-1.0)
dnl
define([AC_CACHE_LOAD], )dnl
define([AC_CACHE_SAVE], )dnl

AC_INIT(c_src/etk.c)

if test -z "$ERL_TOP" || test ! -d $ERL_TOP ; then
  AC_MSG_ERROR(You need to set the environment variable ERL_TOP!)
fi
erl_top=${ERL_TOP}
AC_CONFIG_AUX_DIRS($erl_top/erts/autoconf)

if test "X$host" != "Xfree_source"; then
    AC_CANONICAL_HOST
fi

TCL_VERSION=7.6
TCL_MAJOR_VERSION=7
TCL_MINOR_VERSION=6

TK_VERSION=4.2
TK_MAJOR_VERSION=4
TK_MINOR_VERSION=2

TARGET=$host

if test "${prefix}" = "NONE"; then
    prefix=/usr/local
fi
if test "${exec_prefix}" = "NONE"; then
    exec_prefix=$prefix
fi

AC_PROG_CC
AC_PROG_RANLIB

#--------------------------------------------------------------------
#	See if there was a command-line option for where Tcl is;  if
#	not, assume that its top-level directory is a sibling of ours.
#--------------------------------------------------------------------

AC_ARG_WITH(tcl, [  --with-tcl=DIR          use Tcl 7.6 source from DIR],
	TCL_SRC_DIR=$withval, TCL_SRC_DIR=$ERL_TOP/lib/gs/c_src/lib/tcl7.6)

AC_ARG_WITH(tk, [  --with-tk=DIR          use Tk 4.2 source from DIR],
	TK_SRC_DIR=$withval, TK_SRC_DIR=$ERL_TOP/lib/gs/c_src/lib/tk4.2)

AC_ARG_WITH(erl, [  --with-erl=DIR         use Erlang incude from DIR],
	ERL_DIR=$withval, ERL_DIR=$ERL_TOP )

# check TCL_SRC_DIR, TK_SRC_DIR and ERL_DIR !!

AC_MSG_CHECKING([for tcl7.6 source code])
if test -r $TCL_SRC_DIR/generic/tcl.h; then
	AC_MSG_RESULT(ok)
else
	AC_MSG_RESULT(tcl7.6 source code not found, use --with-tcl)
	exit 1
fi

AC_MSG_CHECKING([for tk4.2 source code])
if test -r $TK_SRC_DIR/generic/tk.h; then
	AC_MSG_RESULT(ok)
else
	AC_MSG_RESULT(tk4.2 source code not found, use --with-tk)
	exit 1
fi

AC_MSG_CHECKING([for erlang installation])
if test -r $ERL_DIR/erts/emulator/beam/driver.h; then
	ERL_INC_DIR="-I$ERL_DIR/erts/emulator/beam -I$ERL_DIR/erts/emulator/sys/unix"
	AC_MSG_RESULT(ok)
elif test -r $ERL_DIR/usr/include/driver.h; then
	ERL_INC_DIR="-I$ERL_DIR/usr/include"
	AC_MSG_RESULT(ok)
else
	AC_MSG_RESULT(erlang installation not found, use --with-erl)
	exit 1
fi

AC_SUBST(ERL_INC_DIR)

ETK_DIR=$erl_top/lib/etk

AC_HAVE_HEADERS(unistd.h limits.h dlfcn.h)

TCLSH_LD_FLAGS=""
AC_SUBST(TCLSH_LD_FLAGS)

BUILD_DIR=`pwd`/${TARGET}
TCL_LIB_DIR=${BUILD_DIR}

AC_SUBST(BUILD_DIR)
AC_SUBST(TARGET)

#--------------------------------------------------------------------
#	Check for various typedefs and provide substitutes if
#	they don't exist.
#--------------------------------------------------------------------

AC_TYPE_MODE_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_TYPE_UID_T
AC_C_BIGENDIAN


#--------------------------------------------------------------------
#	Figure out whether "char" is unsigned.  If so, set a
#	#define for __CHAR_UNSIGNED__.
#--------------------------------------------------------------------

AC_C_CHAR_UNSIGNED

#--------------------------------------------------------------------
#	Supply substitutes for missing POSIX library procedures, or
#	set flags so Tcl uses alternate procedures.
#--------------------------------------------------------------------

AC_REPLACE_FUNCS(getcwd opendir strstr)
AC_REPLACE_FUNCS(strtol tmpnam waitpid)
AC_CHECK_FUNC(strerror, , AC_DEFINE(NO_STRERROR))
AC_CHECK_FUNC(getwd, , AC_DEFINE(NO_GETWD))
AC_CHECK_FUNC(wait3, , AC_DEFINE(NO_WAIT3))
AC_CHECK_FUNC(uname, , AC_DEFINE(NO_UNAME))

#--------------------------------------------------------------------
#	Supply substitutes for missing POSIX header files.  Special
#	notes:
#	    - stdlib.h doesn't define strtol, strtoul, or
#	      strtod insome versions of SunOS
#	    - some versions of string.h don't declare procedures such
#	      as strstr
#--------------------------------------------------------------------

AC_MSG_CHECKING(dirent.h)
AC_TRY_LINK([#include <sys/types.h>
#include <dirent.h>], [
#ifndef _POSIX_SOURCE
#   ifdef __Lynx__
	/*
	 * Generate compilation error to make the test fail:  Lynx headers
	 * are only valid if really in the POSIX environment.
	 */

	missing_procedure();
#   endif
#endif
DIR *d;
struct dirent *entryPtr;
char *p;
d = opendir("foobar");
entryPtr = readdir(d);
p = entryPtr->d_name;
closedir(d);
], tcl_ok=yes, tcl_ok=no)
if test $tcl_ok = no; then
    AC_DEFINE(NO_DIRENT_H)
fi
AC_MSG_RESULT($tcl_ok)
AC_CHECK_HEADER(errno.h, , AC_DEFINE(NO_ERRNO_H))
AC_CHECK_HEADER(float.h, , AC_DEFINE(NO_FLOAT_H))
AC_CHECK_HEADER(limits.h, , AC_DEFINE(NO_LIMITS_H))
AC_CHECK_HEADER(stdlib.h, tcl_ok=1, tcl_ok=0)
AC_EGREP_HEADER(strtol, stdlib.h, , tcl_ok=0)
AC_EGREP_HEADER(strtoul, stdlib.h, , tcl_ok=0)
AC_EGREP_HEADER(strtod, stdlib.h, , tcl_ok=0)
if test $tcl_ok = 0; then
    AC_DEFINE(NO_STDLIB_H)
fi
AC_CHECK_HEADER(string.h, tcl_ok=1, tcl_ok=0)
AC_EGREP_HEADER(strstr, string.h, , tcl_ok=0)
AC_EGREP_HEADER(strerror, string.h, , tcl_ok=0)
if test $tcl_ok = 0; then
    AC_DEFINE(NO_STRING_H)
fi
AC_CHECK_HEADER(sys/wait.h, , AC_DEFINE(NO_SYS_WAIT_H))
AC_CHECK_HEADER(dlfcn.h, , AC_DEFINE(NO_DLFCN_H))
AC_HAVE_HEADERS(unistd.h)

#--------------------------------------------------------------------
# Some extra mathematical functions your machine might have
#--------------------------------------------------------------------
AC_EGREP_HEADER(erf, math.h, AC_EGREP_HEADER(erfc, math.h, , AC_DEFINE(NO_ERFC)), AC_DEFINE(NO_ERF))
AC_EGREP_HEADER(lgamma, math.h, , AC_DEFINE(NO_LGAMMA))
AC_EGREP_HEADER(jn, math.h,, AC_DEFINE(NO_JN))
AC_EGREP_HEADER(yn, math.h,, AC_DEFINE(NO_YN))
#--------------------------------------------------------------------
#	Include sys/select.h if it exists and if it supplies things
#	that appear to be useful and aren't already in sys/types.h.
#	This appears to be true only on the RS/6000 under AIX.  Some
#	systems like OSF/1 have a sys/select.h that's of no use, and
#	other systems like SCO UNIX have a sys/select.h that's
#	pernicious.  If "fd_set" isn't defined anywhere then set a
#	special flag.
#--------------------------------------------------------------------

AC_MSG_CHECKING([fd_set and sys/select])
AC_TRY_COMPILE([#include <sys/types.h>],
	[fd_set readMask, writeMask;], tk_ok=yes, tk_ok=no)
if test $tk_ok = no; then
    AC_HEADER_EGREP(fd_mask, sys/select.h, tk_ok=yes)
    if test $tk_ok = yes; then
	AC_DEFINE(HAVE_SYS_SELECT_H)
    fi
fi
AC_MSG_RESULT($tk_ok)
if test $tk_ok = no; then
    AC_DEFINE(NO_FD_SET)
fi

#------------------------------------------------------------------------------
#       Find out all about time handling differences.
#------------------------------------------------------------------------------

AC_CHECK_HEADERS(sys/time.h)
AC_HEADER_TIME
AC_STRUCT_TIMEZONE

AC_MSG_CHECKING([tm_tzadj in struct tm])
AC_TRY_COMPILE([#include <time.h>], [struct tm tm; tm.tm_tzadj;],
        [AC_DEFINE(HAVE_TM_TZADJ)
         AC_MSG_RESULT(yes)],
         AC_MSG_RESULT(no))

AC_MSG_CHECKING([tm_gmtoff in struct tm])
AC_TRY_COMPILE([#include <time.h>], [struct tm tm; tm.tm_gmtoff;],
        [AC_DEFINE(HAVE_TM_GMTOFF)
         AC_MSG_RESULT(yes)],
         AC_MSG_RESULT(no))

#
# Its important to include time.h in this check, as some systems (like convex)
# have timezone functions, etc.
#
have_timezone=no
AC_MSG_CHECKING([long timezone variable])
AC_TRY_COMPILE([#include <time.h>],
        [extern long timezone;
         timezone += 1;
         exit (0);],
        [have_timezone=yes
	 AC_DEFINE(HAVE_TIMEZONE_VAR)
         AC_MSG_RESULT(yes)],
         AC_MSG_RESULT(no))

#
# On some systems (eg IRIX 6.2), timezone is a time_t and not a long.
#
if test "$have_timezone" = no; then
   AC_MSG_CHECKING([time_t timezone variable])
   AC_TRY_COMPILE([#include <time.h>],
        [extern time_t timezone;
         timezone += 1;
         exit (0);],
        [AC_DEFINE(HAVE_TIMEZONE_VAR)
         AC_MSG_RESULT(yes)],
         AC_MSG_RESULT(no))
fi

#--------------------------------------------------------------------
#	On some systems strstr is broken: it returns a pointer even
#	even if the original string is empty.
#--------------------------------------------------------------------

AC_MSG_CHECKING([proper strstr implementation])
AC_TRY_RUN([
extern int strstr();
int main()
{
    exit(strstr("\0test", "test") ? 1 : 0);
}
], tcl_ok=yes, tcl_ok=no, tcl_ok=no)
if test $tcl_ok = yes; then
    AC_MSG_RESULT(yes)
else
    AC_MSG_RESULT([broken, using substitute])
    LIBOBJS="$LIBOBJS strstr.o"
fi

#--------------------------------------------------------------------
#	Check for strtoul function.  This is tricky because under some
#	versions of AIX strtoul returns an incorrect terminator
#	pointer for the string "0".
#--------------------------------------------------------------------

AC_CHECK_FUNC(strtoul, tcl_ok=1, tcl_ok=0)
AC_TRY_RUN([
extern int strtoul();
int main()
{
    char *string = "0";
    char *term;
    int value;
    value = strtoul(string, &term, 0);
    if ((value != 0) || (term != (string+1))) {
        exit(1);
    }
    exit(0);
}], , tcl_ok=0, tcl_ok=0)
if test "$tcl_ok" = 0; then
    test -n "$verbose" && echo "	Adding strtoul.o."
    LIBOBJS="$LIBOBJS strtoul.o"
fi

#--------------------------------------------------------------------
#	Check for the strtod function.  This is tricky because in some
#	versions of Linux strtod mis-parses strings starting with "+".
#--------------------------------------------------------------------

AC_CHECK_FUNC(strtod, tcl_ok=1, tcl_ok=0)
AC_TRY_RUN([
extern double strtod();
int main()
{
    char *string = " +69";
    char *term;
    double value;
    value = strtod(string, &term);
    if ((value != 69) || (term != (string+4))) {
	exit(1);
    }
    exit(0);
}], , tcl_ok=0, tcl_ok=0)
if test "$tcl_ok" = 0; then
    test -n "$verbose" && echo "	Adding strtod.o."
    LIBOBJS="$LIBOBJS strtod.o"
fi

#--------------------------------------------------------------------
#	Under Solaris 2.4, strtod returns the wrong value for the
#	terminating character under some conditions.  Check for this
#	and if the problem exists use a substitute procedure
#	"fixstrtod" that corrects the error.
#--------------------------------------------------------------------

AC_CHECK_FUNC(strtod, tcl_strtod=1, tcl_strtod=0)
if test "$tcl_strtod" = 1; then
    AC_MSG_CHECKING([for Solaris strtod bug])
    AC_TRY_RUN([
	extern double strtod();
	int main()
	{
	    char *string = "NaN";
	    char *term;
	    strtod(string, &term);
	    if ((term != string) && (term[-1] == 0)) {
		exit(1);
	    }
	    exit(0);
	}], tcl_ok=1, tcl_ok=0, tcl_ok=0)
    if test $tcl_ok = 1; then
	AC_MSG_RESULT(ok)
    else
	AC_MSG_RESULT(buggy)
	LIBOBJS="$LIBOBJS fixstrtod.o"
	AC_DEFINE(strtod, fixstrtod)
    fi
fi


#--------------------------------------------------------------------
#	If a system doesn't have an opendir function (man, that's old!)
#	then we have to supply a different version of dirent.h which
#	is compatible with the substitute version of opendir that's
#	provided.  This version only works with V7-style directories.
#--------------------------------------------------------------------

AC_CHECK_FUNC(opendir, , AC_DEFINE(USE_DIRENT2_H))

#--------------------------------------------------------------------
#	The check below checks whether <sys/wait.h> defines the type
#	"union wait" correctly.  It's needed because of weirdness in
#	HP-UX where "union wait" is defined in both the BSD and SYS-V
#	environments.  Checking the usability of WIFEXITED seems to do
#	the trick.
#--------------------------------------------------------------------

AC_MSG_CHECKING([union wait])
AC_TRY_LINK([#include <sys/types.h> 
#include <sys/wait.h>], [
union wait x;
WIFEXITED(x);		/* Generates compiler error if WIFEXITED
			 * uses an int. */
], tcl_ok=yes, tcl_ok=no)
AC_MSG_RESULT($tcl_ok)
if test $tcl_ok = no; then
    AC_DEFINE(NO_UNION_WAIT)
fi

#--------------------------------------------------------------------
#	Check to see whether the system supports the matherr function
#	and its associated type "struct exception".
#--------------------------------------------------------------------

AC_MSG_CHECKING([matherr support])
AC_TRY_COMPILE([#include <math.h>], [
struct exception x;
x.type = DOMAIN;
x.type = SING;
], tcl_ok=yes, tcl_ok=no)
AC_MSG_RESULT($tcl_ok)
if test $tcl_ok = yes; then
    AC_DEFINE(NEED_MATHERR)
fi

#--------------------------------------------------------------------
#	Check to see whether the system provides a vfork kernel call.
#	If not, then use fork instead.  Also, check for a problem with
#	vforks and signals that can cause core dumps if a vforked child
#	resets a signal handler.  If the problem exists, then use fork
#	instead of vfork.
#--------------------------------------------------------------------

AC_CHECK_FUNC(vfork, tcl_ok=1, tcl_ok=0)
if test "$tcl_ok" = 1; then
    AC_MSG_CHECKING([vfork/signal bug]);
    AC_TRY_RUN([
	#include <stdio.h>
	#include <signal.h>
	#include <sys/wait.h>
	int gotSignal = 0;
	sigProc(sig)
	    int sig;
	{
	    gotSignal = 1;
	}
	main()
	{
	    int pid, sts;
	    (void) signal(SIGCHLD, sigProc);
	    pid = vfork();
	    if (pid <  0) {
		exit(1);
	    } else if (pid == 0) {
		(void) signal(SIGCHLD, SIG_DFL);
		_exit(0);
	    } else {
		(void) wait(&sts);
	    }
	    exit((gotSignal) ? 0 : 1);
	}], tcl_ok=1, tcl_ok=0, tcl_ok=0)
    if test "$tcl_ok" = 1; then
	AC_MSG_RESULT(ok)
    else
	AC_MSG_RESULT([buggy, using fork instead])
    fi
fi
rm -f core
if test "$tcl_ok" = 0; then
    AC_DEFINE(vfork, fork)
fi

#--------------------------------------------------------------------
#	Check whether there is an strncasecmp function on this system.
#	This is a bit tricky because under SCO it's in -lsocket and
#	under Sequent Dynix it's in -linet.
#--------------------------------------------------------------------

AC_CHECK_FUNC(strncasecmp, tcl_ok=1, tcl_ok=0)
if test "$tcl_ok" = 0; then
    AC_CHECK_LIB(socket, strncasecmp, tcl_ok=1, tcl_ok=0)
fi
if test "$tcl_ok" = 0; then
    AC_CHECK_LIB(inet, strncasecmp, tcl_ok=1, tcl_ok=0)
fi
if test "$tcl_ok" = 0; then
    LIBOBJS="$LIBOBJS strncasecmp.o"
fi


#--------------------------------------------------------------------
#	The code below deals with several issues related to gettimeofday:
#	1. Some systems don't provide a gettimeofday function at all
#	   (set NO_GETTOD if this is the case).
#	2. SGI systems don't use the BSD form of the gettimeofday function,
#	   but they have a BSDgettimeofday function that can be used instead.
#	3. See if gettimeofday is declared in the <sys/time.h> header file.
#	   if not, set the GETTOD_NOT_DECLARED flag so that tclPort.h can
#	   declare it.
#--------------------------------------------------------------------

AC_CHECK_FUNC(BSDgettimeofday, AC_DEFINE(HAVE_BSDGETTIMEOFDAY),
	AC_CHECK_FUNC(gettimeofday, , AC_DEFINE(NO_GETTOD)))
AC_MSG_CHECKING([for gettimeofday declaration])
AC_EGREP_HEADER(gettimeofday, sys/time.h, AC_MSG_RESULT(present), [
    AC_MSG_RESULT(missing)
    AC_DEFINE(GETTOD_NOT_DECLARED)
])

#--------------------------------------------------------------------
#	Interactive UNIX requires -linet instead of -lsocket, plus it
#	needs net/errno.h to define the socket-related error codes.
#--------------------------------------------------------------------

AC_CHECK_LIB(inet, main, [LIBS="$LIBS -linet"])
AC_CHECK_HEADER(net/errno.h, AC_DEFINE(HAVE_NET_ERRNO_H))

#--------------------------------------------------------------------
#	The statements below define a collection of symbols related to
#	dynamic loading and shared libraries:
#
#	DL_OBJS -	Name of the object file that implements dynamic
#			loading for Tcl on this system.
#	DL_LIBS -	Library file(s) to include in tclsh and other base
#			applications in order for the "load" command to work.
#	LD_FLAGS -	Flags to pass to the compiler when linking object
#			files into an executable application binary such
#			as tclsh.
#	LD_SEARCH_FLAGS-Flags to pass to ld, such as "-R /usr/local/tcl/lib",
#			that tell the run-time dynamic linker where to look
#			for shared libraries such as libtcl.so.  Depends on
#			the variable LIB_RUNTIME_DIR in the Makefile.
#	MAKE_LIB -	Command to execute to build the Tcl library;
#			differs depending on whether or not Tcl is being
#			compiled as a shared library.
#	SHLIB_CFLAGS -	Flags to pass to cc when compiling the components
#			of a shared library (may request position-independent
#			code, among other things).
#	SHLIB_LD -	Base command to use for combining object files
#			into a shared library.
#	SHLIB_LD_LIBS -	Dependent libraries for the linker to scan when
#			creating shared libraries.  This symbol typically
#			goes at the end of the "ld" commands that build
#			shared libraries. The value of the symbol is
#			"${LIBS}" if all of the dependent libraries should
#			be specified when creating a shared library.  If
#			dependent libraries should not be specified (as on
#			SunOS 4.x, where they cause the link to fail, or in
#			general if Tcl and Tk aren't themselves shared
#			libraries), then this symbol has an empty string
#			as its value.
#	SHLIB_SUFFIX -	Suffix to use for the names of dynamically loadable
#			extensions.  An empty string means we don't know how
#			to use shared libraries on this platform.
#--------------------------------------------------------------------

# Step 1: set the variable "system" to hold the name and version number
# for the system.  This can usually be done via the "uname" command, but
# there are a few systems, like Next, where this doesn't work.

AC_MSG_CHECKING([system version (for dynamic loading)])
if test -f /usr/lib/NextStep/software_version; then
    system=NEXTSTEP-`awk '/3/,/3/' /usr/lib/NextStep/software_version`
else
    system=`uname -s`-`uname -r`
    if test "$?" -ne 0 ; then
	AC_MSG_RESULT([unknown (can't find uname command)])
	system=unknown
    else
	# Special check for weird MP-RAS system (uname returns weird
	# results, and the version is kept in special file).
    
	if test -r /etc/.relid -a "X`uname -n`" = "X`uname -s`" ; then
	    system=MP-RAS-`awk '{print $3}' /etc/.relid'`
	fi
	if test "`uname -s`" = "AIX" ; then
	    system=AIX-`uname -v`.`uname -r`
	fi
	AC_MSG_RESULT($system)
    fi
fi

# Step 2: check for existence of -ldl library.  This is needed because
# Linux can use either -ldl or -ldld for dynamic loading.

AC_CHECK_LIB(dl, dlopen, have_dl=yes, have_dl=no)

dirs="/lib/libdl.so.1 /usr/lib/libdl.so.1"
for i in $dirs ; do
    if test -f $i; then
	have_dl=yes
	break;
    fi
done

# Step 3: set configuration options based on system name and version.

# chmod 555 ${TOP_DIR}/unix/mkinstalldirs

CFLAGS="-O"

fullSrcDir=`cd $srcdir; pwd`
AIX=no
DL_OBJS="tclLoadNone.o"

TCL_LIB_VERSIONS_OK=ok
case $system in
    AIX-*)
	SHLIB_CFLAGS=""
	#SHLIB_LD="$fullSrcDir/ldAix /bin/ld -bhalt:4 -bM:SRE -bE:lib.exp -H512 -T512"
	SHLIB_LD="ld -G -bnoentry -bexpall"
	SHLIB_LD_LIBS='${LIBS}'
	SHLIB_SUFFIX=".so"
	if test "$have_dl" = yes; then
	    DL_OBJS=""
	    DL_LIBS="-ldl"
	else
	    DL_OBJS="tclLoadAix.o"
	    DL_LIBS="-lld"
	fi
	LD_FLAGS=""
	LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'
	AIX=yes
	;;
    BSD/OS-2.1*|BSD/OS-3*)
	SHLIB_CFLAGS=""
	SHLIB_LD="ld -r"
	SHLIB_LD_FLAGS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS=""
	DL_LIBS="-ldl"
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    HP-UX-*.08.*|HP-UX-*.09.*|HP-UX-*.10.*)
	AC_CHECK_LIB(dld, shl_load, tcl_ok=yes, tcl_ok=no)
	if test "$tcl_ok" = yes; then
	    SHLIB_CFLAGS="+z"
	    SHLIB_LD="ld -b"
	    SHLIB_LD_LIBS='${LIBS}'
	    SHLIB_SUFFIX=".sl"
	    DL_OBJS="tclLoadShl.o"
	    DL_LIBS="-ldld"
	    LD_FLAGS="-Wl,-E"
	    LD_SEARCH_FLAGS='-Wl,+b,${LIB_RUNTIME_DIR}:.'
	fi
	;;
    IRIX-4.*)
	SHLIB_CFLAGS="-G 0"
	SHLIB_SUFFIX="..o"
	SHLIB_LD="echo tclLdAout $CC \{$SHLIB_CFLAGS\} | tclsh${TCL_VERSION} -r -G 0"
	SHLIB_LD_LIBS='${LIBS}'
	DL_OBJS="tclLoadAout.o"
	DL_LIBS=""
	LD_FLAGS="-Wl,-D,08000000"
	LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'
	;;
    IRIX-5.*|IRIX-6.*)
	SHLIB_CFLAGS=""
	SHLIB_LD="ld -shared -rdata_shared"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS=""
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'
	;;
    IRIX64-6.*)
	SHLIB_CFLAGS=""
	SHLIB_LD="ld -n32 -shared -rdata_shared"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS=""
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'
	;;
    Linux*)
	SHLIB_CFLAGS="-fPIC"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	if test "$have_dl" = yes; then
	    DL_OBJS=""
	    SHLIB_LD="${CC} -shared"
	    DL_LIBS="-ldl"
	    LD_FLAGS="-rdynamic"
	    LD_SEARCH_FLAGS=""
	else
	    AC_CHECK_HEADER(dld.h, [
		SHLIB_LD="ld -shared"
		DL_OBJS="tclLoadDld.o"
		DL_LIBS="-ldld"
		LD_FLAGS=""
		LD_SEARCH_FLAGS=""])
	fi
	;;
    MP-RAS-02*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD="cc -G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS=""
	DL_LIBS="-ldl"
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    MP-RAS-*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD="cc -G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS=""
	DL_LIBS="-ldl"
	LD_FLAGS="-Wl,-Bexport"
	LD_SEARCH_FLAGS=""
	;;
    NetBSD-*|FreeBSD-*|OpenBSD-*)
	# Not available on all versions:  check for include file.
	AC_CHECK_HEADER(dlfcn.h, [
	    SHLIB_CFLAGS="-fPIC"
	    SHLIB_LD="ld -Bshareable -x"
	    SHLIB_LD_LIBS=""
	    SHLIB_SUFFIX=".so"
	    DL_OBJS=""
	    DL_LIBS=""
	    LD_FLAGS=""
	    LD_SEARCH_FLAGS=""
	], [
	    SHLIB_CFLAGS=""
	    SHLIB_LD="echo tclLdAout $CC \{$SHLIB_CFLAGS\} | tclsh${TCL_VERSION} -r -G 0"
	    SHLIB_LD_LIBS='${LIBS}'
	    SHLIB_SUFFIX="..o"
	    DL_OBJS="tclLoadAout.o"
	    DL_LIBS=""
	    LD_FLAGS=""
	    LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'
	])

	# FreeBSD doesn't handle version numbers with dots.  Also, have to
	# append a dummy version number to .so file names.
	TCL_LIB_VERSIONS_OK=nodots
	;;
    NEXTSTEP-*)
	SHLIB_CFLAGS=""
	SHLIB_LD="cc -nostdlib -r"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS="tclLoadNext.o"
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    OSF1-1.0|OSF1-1.1|OSF1-1.2)
	# OSF/1 1.[012] from OSF, and derivatives, including Paragon OSF/1
	SHLIB_CFLAGS=""
	# Hack: make package name same as library name
	SHLIB_LD='ld -R -export $@:'
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS="tclLoadOSF.o"
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    OSF1-1.*)
	# OSF/1 1.3 from OSF using ELF, and derivatives, including AD2
	SHLIB_CFLAGS="-fPIC"
	SHLIB_LD="ld -shared"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS=""
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    OSF1-V*)
        # Digital OSF/1
	SHLIB_CFLAGS=""
	SHLIB_LD='ld -shared -expect_unresolved "*"'
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS=""
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'
	;;
    RISCos-*)
	SHLIB_CFLAGS="-G 0"
	SHLIB_LD="echo tclLdAout $CC \{$SHLIB_CFLAGS\} | tclsh${TCL_VERSION} -r -G 0"
	SHLIB_LD_LIBS='${LIBS}'
	SHLIB_SUFFIX="..o"
	DL_OBJS="tclLoadAout.o"
	DL_LIBS=""
	LD_FLAGS="-Wl,-D,08000000"
	LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'
	;;
    SCO_SV-3.2*)
        # Note, dlopen is available only on SCO 3.2.5 and greater.  However,
        # this test works, since "uname -s" was non-standard in 3.2.4 and
        # below.
	SHLIB_CFLAGS="-KPIC -belf"
	SHLIB_LD="ld -G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS=""
	DL_LIBS=""
	LD_FLAGS="-belf -Wl,-Bexport"
	LD_SEARCH_FLAGS=""
	;;
     SINIX*5.4*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD="cc -G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS=""
	DL_LIBS="-ldl"
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    SunOS-4*)
	SHLIB_CFLAGS="-PIC"
	SHLIB_LD="ld -assert pure-text"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS=""
	DL_LIBS="-ldl"
	LD_FLAGS=""
	LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'

	# SunOS can't handle version numbers with dots in them in library
	# specs, like -ltcl7.5, so use -ltcl75 instead.  Also, it
	# requires an extra version number at the end of .so file names.
	# So, the library has to have a name like libtcl75.so.1.0
	TCL_LIB_VERSIONS_OK=nodots
	;;
    SunOS-5*)
	SHLIB_CFLAGS="-KPIC"
	# '-z text' breaks with SunOS 5.6 and up on x86, don't use it
	#SHLIB_LD="/usr/ccs/bin/ld -G -z text"
	SHLIB_LD="/usr/ccs/bin/ld -G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS=""
	DL_LIBS="-ldl"
	LD_FLAGS=""
	LD_SEARCH_FLAGS='-Wl,-R,${LIB_RUNTIME_DIR}'
	;;
    ULTRIX-4.*)
	if test "$CC" = "cc"; then
	    CFLAGS="${CFLAGS} -Wf,-XNl8192"
	fi
	SHLIB_CFLAGS="-G 0"
	SHLIB_SUFFIX="..o"
	SHLIB_LD="echo tclLdAout $CC \{$SHLIB_CFLAGS\} | tclsh${TCL_VERSION} -r -G 0"
	SHLIB_LD_LIBS='${LIBS}'
	DL_OBJS="tclLoadAout.o"
	DL_LIBS=""
	LD_FLAGS="-Wl,-D,08000000"
	LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'
	;;
    UNIX_SV*)
	SHLIB_CFLAGS="-KPIC"
	SHLIB_LD="cc -G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS=""
	DL_LIBS="-ldl"
	# Some UNIX_SV* systems (unixware 1.1.2 for example) have linkers
	# that don't grok the -Bexport option.  Test that it does.
	hold_ldflags=$LDFLAGS
	AC_MSG_CHECKING(for ld accepts -Bexport flag)
	LDFLAGS="${LDFLAGS} -Wl,-Bexport"
	AC_TRY_LINK(, [int i;], found=yes, found=no)
	LDFLAGS=$hold_ldflags
	AC_MSG_RESULT($found)
	if test $found = yes; then
	  LD_FLAGS="-Wl,-Bexport"
	else
	  LD_FLAGS=""
	fi
	LD_SEARCH_FLAGS=""
	;;
    *)
	if test "$have_dl" = yes; then
	    SHLIB_CFLAGS="-fPIC"
	    SHLIB_LD_LIBS='${LIBS}'
	    SHLIB_SUFFIX=".so"
	    DL_OBJS=""
	    SHLIB_LD="${CC} -shared"
	    DL_LIBS="-ldl"
	    LD_FLAGS="-Wl,-Bexport"
	    LD_SEARCH_FLAGS=""
	fi
	;;
esac

# Step 4: If pseudo-static linking is in use (see K. B. Kenny, "Dynamic
# Loading for Tcl -- What Became of It?".  Proc. 2nd Tcl/Tk Workshop,
# New Orleans, LA, Computerized Processes Unlimited, 1994), then we need
# to determine which of several header files defines the a.out file
# format (a.out.h, sys/exec.h, or sys/exec_aout.h).  At present, we
# support only a file format that is more or less version-7-compatible. 
# In particular,
#	- a.out files must begin with `struct exec'.
#	- the N_TXTOFF on the `struct exec' must compute the seek address
#	  of the text segment
#	- The `struct exec' must contain a_magic, a_text, a_data, a_bss
#	  and a_entry fields.
# The following compilation should succeed if and only if either sys/exec.h
# or a.out.h is usable for the purpose.
#
# Note that the modified COFF format used on MIPS Ultrix 4.x is usable; the
# `struct exec' includes a second header that contains information that
# duplicates the v7 fields that are needed.

if test "x$DL_OBJS" = "xtclLoadAout.o" ; then
    AC_MSG_CHECKING(sys/exec.h)
    AC_TRY_COMPILE([#include <sys/exec.h>],[
	struct exec foo;
	unsigned long seek;
	int flag;
#if defined(__mips) || defined(mips)
	seek = N_TXTOFF (foo.ex_f, foo.ex_o);
#else
	seek = N_TXTOFF (foo);
#endif
	flag = (foo.a_magic == OMAGIC);
	return foo.a_text + foo.a_data + foo.a_bss + foo.a_entry;
], tcl_ok=usable, tcl_ok=unusable)
    AC_MSG_RESULT($tcl_ok)
    if test $tcl_ok = usable; then
	AC_DEFINE(USE_SYS_EXEC_H)
    else
	AC_MSG_CHECKING(a.out.h)
	AC_TRY_COMPILE([#include <a.out.h>],[
	    struct exec foo;
	    unsigned long seek;
	    int flag;
#if defined(__mips) || defined(mips)
	    seek = N_TXTOFF (foo.ex_f, foo.ex_o);
#else
	    seek = N_TXTOFF (foo);
#endif
	    flag = (foo.a_magic == OMAGIC);
	    return foo.a_text + foo.a_data + foo.a_bss + foo.a_entry;
	], tcl_ok=usable, tcl_ok=unusable)
	AC_MSG_RESULT($tcl_ok)
	if test $tcl_ok = usable; then
	    AC_DEFINE(USE_A_OUT_H)
	else
	    AC_MSG_CHECKING(sys/exec_aout.h)
	    AC_TRY_COMPILE([#include <sys/exec_aout.h>],[
		struct exec foo;
		unsigned long seek;
		int flag;
#if defined(__mips) || defined(mips)
		seek = N_TXTOFF (foo.ex_f, foo.ex_o);
#else
		seek = N_TXTOFF (foo);
#endif
		flag = (foo.a_midmag == OMAGIC);
		return foo.a_text + foo.a_data + foo.a_bss + foo.a_entry;
	    ], tcl_ok=usable, tcl_ok=unusable)
	    AC_MSG_RESULT($tcl_ok)
	    if test $tcl_ok = usable; then
		AC_DEFINE(USE_SYS_EXEC_AOUT_H)
	    else
		DL_OBJS=""
	    fi
	fi
    fi
fi

# If we're running gcc, then change the C flags for compiling shared
# libraries to the right flags for gcc, instead of those for the
# standard manufacturer compiler.

SHOBJ_SUFFIX=".o"
if test "x$SHLIB_CFLAGS" != "x"; then
    SHOBJ_SUFFIX="..o"
    if test "x$SHLIB_CFLAGS" != "x-G 0"; then
	if test "x$CC" = "xgcc" -o `$CC -v 2>&1 | grep -c gcc` != "0" ; then
	    SHLIB_CFLAGS="-fPIC"
	fi
    fi
fi

#------------------------------------------------------------------------------
# Test for UnixWare -o bug.  Macros are used in targets to build the shared
# objects.
#------------------------------------------------------------------------------
AC_MSG_CHECKING([for UnixWare -o bug])
rm -rf conftest*
cat > conftest.$ac_ext <<EOF
int main() { return 0; }
EOF
${CC-cc} -c -o conftest..o conftest.$ac_ext
if test -f conftest..o; then
    OBJ_SAVE="@:"
    OBJ_RESTORE="@:"
    CC_SHOBJ_FLAG='-o $@'
    AC_MSG_RESULT([OK])
else
    OBJ_SAVE='@if test -f $*o ; then rm -f $*sav; mv $*o $*sav; fi;'
    OBJ_RESTORE='@mv $*o $@; if test -f $*save ; then mv $*save $*o; fi;'
    CC_SHOBJ_FLAG=""
    AC_MSG_RESULT([buggy])
fi
rm -rf conftest*

AC_SUBST(OBJ_SAVE)
AC_SUBST(OBJ_RESTORE)
AC_SUBST(CC_SHOBJ_FLAG)

#--------------------------------------------------------------------
#	The statements below check for systems where POSIX-style
#	non-blocking I/O (O_NONBLOCK) doesn't work or is unimplemented. 
#	On these systems (mostly older ones), use the old BSD-style
#	FIONBIO approach instead.
#--------------------------------------------------------------------

AC_CHECK_HEADERS(sys/ioctl.h)
AC_CHECK_HEADERS(sys/filio.h)
AC_MSG_CHECKING([FIONBIO vs. O_NONBLOCK for nonblocking I/O])
if test -f /usr/lib/NextStep/software_version; then
    system=NEXTSTEP-`awk '/3/,/3/' /usr/lib/NextStep/software_version`
else
    system=`uname -s`-`uname -r`
    if test "$?" -ne 0 ; then
	system=unknown
    else
	# Special check for weird MP-RAS system (uname returns weird
	# results, and the version is kept in special file).
    
	if test -r /etc/.relid -a "X`uname -n`" = "X`uname -s`" ; then
	    system=MP-RAS-`awk '{print $3}' /etc/.relid'`
	fi
	if test "`uname -s`" = "AIX" ; then
	    system=AIX-`uname -v`.`uname -r`
	fi
    fi
fi
case $system in
    AIX-*)
	AC_DEFINE(USE_FIONBIO)
	AC_MSG_RESULT(FIONBIO)
	;;
    OSF*)
	AC_DEFINE(USE_FIONBIO)
	AC_MSG_RESULT(FIONBIO)
	;;
    SunOS-4*)
	AC_DEFINE(USE_FIONBIO)
	AC_MSG_RESULT(FIONBIO)
	;;
    ULTRIX-4.*)
	AC_DEFINE(USE_FIONBIO)
	AC_MSG_RESULT(FIONBIO)
	;;
    *)
	AC_MSG_RESULT(O_NONBLOCK)
	;;
esac

#--------------------------------------------------------------------
#	The statements below define a collection of symbols related to
#	building libtcl as a shared library instead of a static library.
#--------------------------------------------------------------------

realRanlib=$RANLIB

TCL_VER="${TCL_VERSION}"
TK_VER="${TK_VERSION}"

if test "${SHLIB_SUFFIX}" != "" ; then
    TCL_LD_SEARCH_FLAGS="${LD_SEARCH_FLAGS}"
else
    if test "$AIX" = "yes" ; then
       if test "x$DL_OBJS" != "xtclLoadAout.o" ; then
	  SHLIB_LD_LIBS=""
       fi
    fi
    TCL_LD_SEARCH_FLAGS=""
fi

#------------------------------------------------------------------------------
# Test if there are shared versions of the math and c libraries.
#------------------------------------------------------------------------------

OBJECT_LIB_FLAGS=""
if test "x${SHLIB_SUFFIX}" = "x..o" -o "x${SHLIB_SUFFIX}" = "x.a"; then
    if test "x${SHLIB_CFLAGS}" = "x-G 0"; then
	TEST_SUFFIX="_G0.a"
	OBJECT_LIB_FLAGS="-G 0"
    else
	TEST_SUFFIX=".a"
    fi
else
    if test "$AIX" = "yes"; then
	TEST_SUFFIX=".a"
    else
	TEST_SUFFIX="${SHLIB_SUFFIX}"
    fi
fi

#
# If there is no shared math library, define the symbol "fabs" as
# undefined, because Tk needs it when loaded dynamically.
dirs="/lib/libm${TEST_SUFFIX}* /usr/lib/libm${TEST_SUFFIX}*"
SHARED_LIBS=""
for i in $dirs ; do
    if test -f $i; then
	SHARED_LIBS='-lm'
	break;
    fi
done
if test "x${SHARED_LIBS}" = "x"; then
    LD_FLAGS="${LD_FLAGS} -u fabs"
fi
#
# If there is no shared c library, define the following symbols as
# undefined, because TclX needs them when loaded dynamically.
found=no
dirs="/lib/libc${TEST_SUFFIX}* /usr/lib/libc${TEST_SUFFIX}*"
for i in $dirs ; do
    if test -f $i; then
	SHARED_LIBS="${SHARED_LIBS} -lc"
	found=yes
	break;
    fi
done

if test "$found" = "no"; then
    LD_FLAGS="${LD_FLAGS} -u truncate -u sigaction -u sigfillset \
	-u sigemptyset -u sigaddset -u sigprocmask -u sigismember \
	-u chroot -u times -u rresvport -u getgrgid -u endgrent \
	-u getgrnam -u getegid -u getppid -u getpgrp -u setpgid \
	-u sysconf -u getgroups -u setuid -u getgid -u setgid \
	-u random -u srandom -u strcoll -u strspn -u getpriority \
	-u setpriority -u sync -u fsync -u fork -u execl -u link \
	-u ftruncate -u fchmod -u fchown -u dup -u memcmp"
fi

AC_SUBST(OBJECT_LIB_FLAGS)
AC_SUBST(SHARED_LIBS)


if test "x$DL_OBJS" != "x"  ; then
    LIBOBJS="${DL_OBJS} ${LIBOBJS}"
fi

if test "x$CC" = "xgcc" -o `$CC -v 2>&1 | grep -c gcc` != "0" ; then
    LIBOBJS="${LIBOBJS} _eprintf.o _builtin.o"
fi

LIBSOBJS=`echo $LIBOBJS |sed -e s/\\\\.o/$SHOBJ_SUFFIX/g`
AC_SUBST(LIBSOBJS)

if test "$SHLIB_SUFFIX" = "..o" -o "$SHLIB_SUFFIX" = ".a"; then
    TCL_SHLIB_SOBJS='libtcl${SHOBJ_SUFFIX}'
else
    TCL_SHLIB_SOBJS='${TCL_SOBJS}'
fi

WISH=wish
TCLSH="tclsh${TCL_VERSION}"
VERSION_SUFFIX=

AC_SUBST(TCLSH)
AC_SUBST(WISH)
AC_SUBST(VERSION_SUFFIX)

TCL_BIN_DIR=${BUILD_DIR}
TCL_INC_DIR=${TCL_SRC_DIR}/generic

#--------------------------------------------------------------------
#	Locate the X11 header files and the X11 library archive.  Try
#	the ac_path_x macro first, but if it doesn't find the X stuff
#	(e.g. because there's no xmkmf program) then check through
#	a list of possible directories.  Under some conditions the
#	autoconf macro will return an include directory that contains
#	no include files, so double-check its result just to be safe.
#--------------------------------------------------------------------

AC_PATH_X
not_really_there=""
/bin/rm -f SKIP
if test "$no_x" = ""; then
    if test "$x_includes" = ""; then
	AC_TRY_CPP([#include <X11/XIntrinsic.h>], , not_really_there="yes")
    else
	if test ! -r $x_includes/X11/Intrinsic.h; then
	    not_really_there="yes"
	fi
    fi
fi
if test "$no_x" = "yes" -o "$not_really_there" = "yes"; then
    AC_MSG_CHECKING(for X11 header files)
    XINCLUDES="# no special path needed"
    AC_TRY_CPP([#include <X11/Intrinsic.h>], , XINCLUDES="nope")
    if test "$XINCLUDES" = nope; then
        dirs="/usr/unsupported/include /usr/local/include /usr/X386/include /usr/include/X11R4 /usr/X11R5/include /usr/include/X11R5 /usr/openwin/include /usr/X11/include /usr/sww/include"
        for i in $dirs ; do
	    if test -r $i/X11/Intrinsic.h; then
		AC_MSG_RESULT($i)
	        XINCLUDES=" -I$i"
		break
	    fi
        done
    fi
else
    if test "$x_includes" != ""; then
	XINCLUDES=-I$x_includes
    else
	XINCLUDES="# no special path needed"
    fi
fi
if test "$XINCLUDES" = nope; then
    AC_MSG_RESULT(couldn't find any!)
    XINCLUDES="# no include files found"
    echo "No X Windows includes or libraries found" > SKIP
fi

if test "$no_x" = yes; then
    AC_MSG_CHECKING(for X11 libraries)
    XLIBSW=nope
    dirs="/usr/unsupported/lib /usr/local/lib /usr/X386/lib /usr/lib/X11R4 /usr/X11R5/lib /usr/lib/X11R5 /usr/X11R6/lib /usr/lib/X11R6 /usr/openwin/lib /usr/X11/lib /usr/sww/X11/lib"
    for i in $dirs ; do
	if test -r $i/libX11.a -o -r $i/libX11.so -o -r $i/libX11.sl; then
	    AC_MSG_RESULT($i)
	    XLIBSW="-L$i -lX11"
	    x_libraries="$i"
	    break
	fi
    done
else
    if test "$x_libraries" = ""; then
	XLIBSW=-lX11
    else
	XLIBSW="-L$x_libraries -lX11"
    fi
fi
if test "$XLIBSW" = nope ; then
    AC_CHECK_LIB(Xwindow, XCreateWindow, XLIBSW=-lXwindow)
fi
if test "$XLIBSW" = nope ; then
    AC_MSG_RESULT(couldn't find any!  Using -lX11.)
    XLIBSW=-lX11
    echo "No X Windows includes or libraries found" > SKIP
fi

#--------------------------------------------------------------------
#	If the X library binaries are in a non-standard directory, and
#	if a mechanism such as -R is available on this platform for
#	specifying a runtime search path for shared libraries, add the X
#	library location into that search path.
#--------------------------------------------------------------------

X11_LIB_DIR=`echo ${XLIBSW} |sed -e "s|-L||" -e "s/ .*$//g" -e "s/-l.*$//g" -e "s|/libX11.*$||" -e "s|/libXhp11.*$||"`

LIB_RUNTIME_DIR='${LIB_RUNTIME_DIR}'
if test "x${X11_LIB_DIR}" != "x"; then
    LIB_RUNTIME_DIR="${LIB_RUNTIME_DIR}:${X11_LIB_DIR}"
fi

if test "${TCL_LD_SEARCH_FLAGS}" = '-L${LIB_RUNTIME_DIR}'; then
    LIB_RUNTIME_DIR=`echo ${LIB_RUNTIME_DIR} |sed -e 's/:/ -L/g'`
fi

export LIB_RUNTIME_DIR; \
eval "TK_CC_SEARCH_FLAGS=\"$TCL_LD_SEARCH_FLAGS\""
TK_LD_SEARCH_FLAGS=`echo ${TK_CC_SEARCH_FLAGS} |sed -e "s|-Wl,||g" -e "s|,| |g"`

AC_SUBST(X11_LIB_DIR)

LIB_RUNTIME_DIR="$exec_prefix/lib"

AC_SUBST(LIB_RUNTIME_DIR)

#--------------------------------------------------------------------
#	Check for the existence of various libraries.  The order here
#	is important, so that then end up in the right order in the
#	command line generated by make.  The -lsocket and -lnsl libraries
#	require a couple of special tricks:
#	1. Use "connect" and "accept" to check for -lsocket, and
#	   "gethostbyname" to check for -lnsl.
#	2. Use each function name only once:  can't redo a check because
#	   autoconf caches the results of the last check and won't redo it.
#	3. Use -lnsl and -lsocket only if they supply procedures that
#	   aren't already present in the normal libraries.  This is because
#	   IRIX 5.2 has libraries, but they aren't needed and they're
#	   bogus:  they goof up name resolution if used.
#	4. On some SVR4 systems, can't use -lsocket without -lnsl too.
#	   To get around this problem, check for both libraries together
#	   if -lsocket doesn't work by itself.
#--------------------------------------------------------------------

AC_CHECK_LIB(Xbsd, main, [LIBS="$LIBS -lXbsd"])

tk_checkBoth=0
AC_CHECK_FUNC(connect, tk_checkSocket=0, tk_checkSocket=1)
if test "$tk_checkSocket" = 1; then
    AC_CHECK_LIB(socket, main, LIBS="$LIBS -lsocket", tk_checkBoth=1)
fi
if test "$tk_checkBoth" = 1; then
    tk_oldLibs=$LIBS
    LIBS="$LIBS -lsocket -lnsl"
    AC_CHECK_FUNC(accept, tk_checkNsl=0, [LIBS=$tk_oldLibs])
fi
AC_CHECK_FUNC(gethostbyname, , AC_CHECK_LIB(nsl, main, [LIBS="$LIBS -lnsl"]))

#--------------------------------------------------------------------
# One more check related to the X libraries.  The standard releases
# of Ultrix don't support the "xauth" mechanism, so send won't work
# unless TK_NO_SECURITY is defined.  However, there are usually copies
# of the MIT X server available as well, which do support xauth.
# Check for the MIT stuff and use it if it exists.
#
# Note: can't use ac_check_lib macro (at least, not in Autoconf 2.1)
# because it can't deal with the "-" in the library name.
#--------------------------------------------------------------------

if test -d /usr/include/mit ; then
    AC_MSG_CHECKING([MIT X libraries])
    tk_oldCFlags=$CFLAGS
    CFLAGS="$CFLAGS -I/usr/include/mit"
    tk_oldLibs=$LIBS
    LIBS="$LIBS -lX11-mit"
    AC_TRY_LINK([
	#include <X11/Xlib.h>
    ], [
	XOpenDisplay(0);
    ], [
	AC_MSG_RESULT(yes)
	XLIBSW="-lX11-mit"
	XINCLUDES="-I/usr/include/mit"
    ], AC_MSG_RESULT(no))
    CFLAGS=$tk_oldCFlags
    LIBS=$tk_oldLibs
fi

#--------------------------------------------------------------------
#	On a few very rare systems, all of the libm.a stuff is
#	already in libc.a.  Set compiler flags accordingly.
#	Also, Linux requires the "ieee" library for math to
#	work right (and it must appear before "-lm").
#	No, this is only true for older Linux systems, and causes
#	problems for the etk_drv build with most newer ones - skip it.
#--------------------------------------------------------------------

MATH_LIBS=""
AC_CHECK_FUNC(sin, , MATH_LIBS="-lm")
#AC_CHECK_LIB(ieee, main, [MATH_LIBS="-lieee $MATH_LIBS"])

#--------------------------------------------------------------------
#	If this system doesn't have a memmove procedure, use memcpy
#	instead.
#--------------------------------------------------------------------

AC_CHECK_FUNC(memmove, , [AC_DEFINE(memmove, memcpy)])

#--------------------------------------------------------------------
#	The statements below define a collection of symbols related to
#	building libtk as a shared library instead of a static library.
#--------------------------------------------------------------------

if test "x${SHLIB_LD_LIBS}" = "xAlwaysFalse"; then
    SHLIB_CFLAGS="-DSUN4_SHLIB_BUG ${SHLIB_CFLAGS}"
fi


SHARED_X_LIB=""
dirs="$X11_LIB_DIR/libX11${TEST_SUFFIX}* /usr/openwin/lib/libX11${TEST_SUFFIX}* /usr/X11/lib/libX11${TEST_SUFFIX}* /usr/X11R5/lib/libX11${TEST_SUFFIX}* /usr/X11R6/lib/libX11${TEST_SUFFIX}* /usr/local/lib/libX11${TEST_SUFFIX}* /usr/lib/libX11${TEST_SUFFIX}* /lib/libX11${TEST_SUFFIX}*"
for i in $dirs ; do
    if test -f $i; then
	SHARED_X_LIB="${XLIBSW}"
	break;
    fi
done
if test "x${SHARED_X_LIB}" = "x"; then
    TK_LD_FLAGS="-u XCreateFontCursor -u XDrawImageString -u XDrawPoint -u XDrawPoints \
	-u XDrawSegments -u XFetchBuffer -u XFetchName -u XListProperties -u XLowerWindow \
	-u XMapRaised -u XPutImage -u XQueryColor -u XQueryTextExtents -u XQueryTree \
	-u XReparentWindow -u XRotateBuffers -u XSetBackground -u XSetFillStyle -u XSetFont \
	-u XSetLineAttributes -u XSetStipple -u XStoreBuffer -u XUndefineCursor"
else
    TK_LD_FLAGS=""
fi
AC_SUBST(TK_LD_FLAGS)

AC_SUBST(SHARED_X_LIB)



#-------------------------------------------------------------------
# Test if we are supposed to use a threaded system to allow
# for threads in the system.
# First try native threads (for now solaris threads first), then
# try posix threads.
#
# Default is to use threads if we find them.
#-------------------------------------------------------------------

AC_MSG_CHECKING([whether to build with support for threads])

AC_ARG_ENABLE(threads, [  --disable-threads         do not use threads],
                       [ case "$enableval" in
                             no)
                                tcl_ok=nothreads ;;
                              *)
                                tcl_ok=threads-error ;;
                          esac ],
                        [ tcl_ok=threads-ok ])

THR_LIBS=
THR_DEFS=

case "$tcl_ok" in
    threads-*)
        AC_MSG_RESULT([yes])
        found_threads=0

        # Check for Solaris threads
        if test "$found_threads" = "0"; then
                AC_CHECK_LIB(thread, thr_create, 
                        [THR_LIBS="-lthread"
                         THR_DEFS="-DSOLARIS_THREADS"
                         found_threads=1])
        fi

        # Check for POSIX threads
        if test "$found_threads" = "0"; then
                AC_CHECK_LIB(pthread, pthread_create,
                        [THR_LIBS="-lpthread"
                         THR_DEFS="-DPOSIX_THREADS -D_THREAD_SAFE"
                         found_threads=1])
        fi

        # FreeBSD has pthreads in special c library, c_r
        if test "$found_threads" = "0"; then
                AC_CHECK_LIB(c_r, pthread_create,
                        [THR_LIBS="-lc_r"
                         THR_DEFS="-DPOSIX_THREADS -D_THREAD_SAFE"
                         found_threads=1])
        fi

        case "$found_threads"-"$tcl_ok" in
            0-threads-ok)
                # no threads found
                ;;
            0-threads-error)
                # If user specifically asked for threads give an error msg.
                AC_MSG_ERROR([don't know how to enable threads])
                ;;
            *)
                THR_DEFS="-DUSE_THREADS -D_REENTRANT $THR_DEFS"
                ;;
        esac
        ;;
    *)
        AC_MSG_RESULT([no])
        ;;
esac

AC_SUBST(THR_LIBS)
AC_SUBST(THR_DEFS)

#------------------------------------------------------------------------------
# Find INADDR_LOOPBACK definition (overkill?)
#------------------------------------------------------------------------------

AC_MSG_CHECKING(if INADDR_LOOPBACK is in netinet/in.h)

AC_TRY_COMPILE([
    #include <sys/types.h>
    #include <netinet/in.h>],
    [int i = INADDR_LOOPBACK;],
    erl_ok=yes, erl_ok=no)
AC_MSG_RESULT($erl_ok)

if test $erl_ok != yes; then
    AC_MSG_CHECKING(if INADDR_LOOPBACK is in rpc/types.h)
    AC_TRY_COMPILE([#include <rpc/types.h>],
        [int i = INADDR_LOOPBACK;],
        erl_ok=yes, erl_ok=no)
    if test $erl_ok = yes; then
        AC_DEFINE(DEF_INADDR_LOOPBACK_IN_RPC_TYPES_H)
        AC_MSG_RESULT($erl_ok)
    else
        AC_DEFINE(INADDR_LOOPBACK,"(u_long)0x7F000001")
        AC_MSG_RESULT(not found but defines it to 127.0.0.1)
    fi
fi


AC_SUBST(CFLAGS)
AC_SUBST(SHOBJ_SUFFIX)
AC_SUBST(DL_RUNTIME_NAME)



AC_SUBST(TCL_VERSION)
AC_SUBST(TCL_MAJOR_VERSION)
AC_SUBST(TCL_MINOR_VERSION)

AC_SUBST(TK_VERSION)
AC_SUBST(TK_MAJOR_VERSION)
AC_SUBST(TK_MINOR_VERSION)

AC_SUBST(TK_CC_SEARCH_FLAGS)
AC_SUBST(TK_LD_SEARCH_FLAGS)
AC_SUBST(TCL_BIN_DIR)
AC_SUBST(TCL_LIB_DIR)
AC_SUBST(TCL_INC_DIR)
AC_SUBST(TCL_VERSION)

AC_SUBST(XINCLUDES)
AC_SUBST(XLIBSW)

AC_SUBST(TCL_SRC_DIR)
AC_SUBST(TK_SRC_DIR)
AC_SUBST(TCL_SHLIB_SOBJS)
AC_SUBST(DL_LIBS)
AC_SUBST(DL_OBJS)
AC_SUBST(LD_FLAGS)
AC_SUBST(MAKE_LIB)
AC_SUBST(MATH_LIBS)
AC_SUBST(SHLIB_CFLAGS)
AC_SUBST(SHLIB_LD)
AC_SUBST(SHLIB_LD_LIBS)
AC_SUBST(SHLIB_SUFFIX)

AC_SUBST(TCL_LIB_SPEC)
AC_SUBST(TCL_LIB_VERSIONS_OK)
AC_SUBST(TCL_SHARED_LIB_SUFFIX)
AC_SUBST(TCL_SRC_DIR)
AC_SUBST(TCL_UNSHARED_LIB_SUFFIX)

AC_SUBST(ETK_DIR)
AC_SUBST(ERL_DIR)

AC_OUTPUT(c_src/$TARGET/Makefile:c_src/Makefile.in)

