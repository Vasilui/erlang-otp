#!/bin/sh
#
# Skeleton for a script intended to run the mstone1(N) 
# performance test.
#

# Get the name of the program
program=`echo $0 | sed 's#.*/##g'`

usage="\
Usage: $program [options]

This shell script is used to run the mstone 1 (factor) performance 
test. It is not intended to test the megaco stack but instead to 
give a \"performance value\" of the host on which it is run.

Options:
 -help             display this help and exit.
 -h <num>          default process heap size
 -a <num>          async thread pool size (default is 0)
 -f <factor>       normally the test is run with 16 processes 
                   (factor 1), one for each codec config. The test 
                   can however be run with other factors, e.g. 
                   factor 10 means that 10 processes will be started 
                   for each megaco codec config.
 -d <drv-mode>     driver mode for the test:
                   std - all codec config(s) will be used
                   nd  - only codec config(s) without drivers will be used
                   od  - only codec config(s) with drivers will be used
 --                everything after this is just passed on to erl.
"

ERL_HOME=<path to otp top dir>
MEGACO_HOME=$ERL_HOME/lib/erlang/lib/<megaco dir>
MEAS_HOME=$MEGACO_HOME/examples/meas
PATH=$ERL_HOME/bin:$PATH

MODULE=megaco_codec_mstone1
STARTF="start"
FACTOR=""

while test $# != 0; do
    # echo "DBG: Value = $1"
    case  $1 in
        -help)
            echo "$usage" ;
            exit 0;;

        -h)
            PHS="+h $2";
            shift ; shift ;;

        -a)
            ATP="+A $2";
            shift ; shift ;;

        -d)
	    case $2 in
		std)
		    STARTF="start";
		    shift ; shift ;;
		nd)
		    STARTF="start_no_drv";
		    shift ; shift ;;
		od)
		    STARTF="start_only_drv";
		    shift ; shift ;;
		*)
		    echo "unknown driver mode: $2";
		    echo "$usage" ;
		    exit 0
	    esac;;
	    
        -f)
            FACTOR="$2";
            shift ; shift ;;

        --)
            shift ;
            break;;

        *)
            echo "unknown option: $1";
            echo "$usage" ;
            exit 0
    esac
done

MSTONE="-s $MODULE $STARTF $FACTOR"

SCHEDS="no_smp 01 02 04 08 16 32 64"

for i in `echo $SCHEDS`; do 
    case $i in
	no_smp)
	    SMP_INFO="No SMP"
	    SMP_OPTS="-smp disable" # THIS IS THE R12B WAY TO DISABLE SMP
	    LOG="mstone1-00.log"
	    ;;

	01)
	    SMP_INFO="SMP: 1 scheduler"
	    SMP_OPTS="-smp +S $i"
	    LOG="mstone1-$i.log"
	    ;;

	*)
	    SMP_INFO="SMP: $i schedulers"
	    SMP_OPTS="-smp +S $i"
	    LOG="mstone1-$i.log"
	    ;;
    esac

    echo ""
    echo "---------------------------------------------"
    echo "$SMP_INFO"
    echo ""

    ERL="erl \
	-noshell \
	$PHS \
	$ATP \
	$SMP_OPTS \
	-pa $MEAS_HOME \
	$MSTONE \
	$* \
	-s init stop"

    echo $ERL
    $ERL | tee $LOG
done