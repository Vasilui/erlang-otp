%%------------------------------------------------------------
%%
%% Implementation stub file
%% 
%% Target: oe_mnesia_corba_session
%% Source: /ldisk/daily_build/otp_prebuild_r11b.2007-06-11_19/otp_src_R11B-5/lib/mnesia_session/src/mnesia_corba_session.idl
%% IC vsn: 4.2.13
%% 
%% This file is automatically generated. DO NOT EDIT IT.
%%
%%------------------------------------------------------------

-module(oe_mnesia_corba_session).
-ic_compiled("4_2_13").


-include_lib("orber/include/ifr_types.hrl").

%% Interface functions

-export([oe_register/0, oe_unregister/0, oe_get_module/5]).
-export([oe_dependency/0]).



oe_register() ->
    OE_IFR = orber_ifr:find_repository(),

    register_tests(OE_IFR),

    _OE_1 = oe_get_top_module(OE_IFR, "IDL:mnesia:1.0", "mnesia", "1.0"),

    orber_ifr:'ModuleDef_create_enum'(_OE_1, "IDL:mnesia/Status:1.0", "Status", "1.0", ["ok","end_of_table","timeout","error"]),

    orber_ifr:'ModuleDef_create_alias'(_OE_1, "IDL:mnesia/Record:1.0", "Record", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, tk_any)),

    orber_ifr:'ModuleDef_create_alias'(_OE_1, "IDL:mnesia/Recordlist:1.0", "Recordlist", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,tk_any,0})),

    orber_ifr:'ModuleDef_create_alias'(_OE_1, "IDL:mnesia/TableName:1.0", "TableName", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0})),

    orber_ifr:'ModuleDef_create_alias'(_OE_1, "IDL:mnesia/TableList:1.0", "TableList", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})),

    orber_ifr:'ModuleDef_create_alias'(_OE_1, "IDL:mnesia/Key:1.0", "Key", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, tk_any)),

    orber_ifr:'ModuleDef_create_alias'(_OE_1, "IDL:mnesia/KeyList:1.0", "KeyList", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,tk_any,0})),

    orber_ifr:'ModuleDef_create_alias'(_OE_1, "IDL:mnesia/Indices:1.0", "Indices", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,tk_long,0})),

    orber_ifr:'ModuleDef_create_alias'(_OE_1, "IDL:mnesia/AttrNames:1.0", "AttrNames", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})),

    orber_ifr:'ModuleDef_create_alias'(_OE_1, "IDL:mnesia/RecordName:1.0", "RecordName", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0})),

    orber_ifr:'ModuleDef_create_alias'(_OE_1, "IDL:mnesia/Node:1.0", "Node", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0})),

    orber_ifr:'ModuleDef_create_alias'(_OE_1, "IDL:mnesia/NodeList:1.0", "NodeList", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})),

    orber_ifr:'ModuleDef_create_enum'(_OE_1, "IDL:mnesia/Storage:1.0", "Storage", "1.0", ["ram_copies","disc_copies","disc_only_copies"]),

    orber_ifr:'ModuleDef_create_enum'(_OE_1, "IDL:mnesia/SetOrBag:1.0", "SetOrBag", "1.0", ["set","bag"]),

    orber_ifr:'ModuleDef_create_enum'(_OE_1, "IDL:mnesia/AccessMode:1.0", "AccessMode", "1.0", ["read_only","read_write"]),

    orber_ifr:'ModuleDef_create_alias'(_OE_1, "IDL:mnesia/Checkpoints:1.0", "Checkpoints", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})),

    orber_ifr:'ModuleDef_create_struct'(_OE_1, "IDL:mnesia/TableDef:1.0", "TableDef", "1.0", [#structmember{name="type", type={tk_enum,
                                    "IDL:mnesia/SetOrBag:1.0",
                                    "SetOrBag",
                                    ["set","bag"]}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/SetOrBag:1.0",
                                               "SetOrBag",
                                               ["set","bag"]})}, #structmember{name="mode", type={tk_enum,
                                    "IDL:mnesia/AccessMode:1.0",
                                    "AccessMode",
                                    ["read_only","read_write"]}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/AccessMode:1.0",
                                               "AccessMode",
                                               ["read_only","read_write"]})}, #structmember{name="ram_copies", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})}, #structmember{name="disc_copies", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})}, #structmember{name="disc_only_copies", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})}, #structmember{name="index_list", type={tk_sequence,tk_long,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,tk_long,0})}, #structmember{name="attributes", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})}, #structmember{name="record_name", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0})}]),

    orber_ifr:'ModuleDef_create_struct'(_OE_1, "IDL:mnesia/CheckpointDef:1.0", "CheckpointDef", "1.0", [#structmember{name="cpName", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0})}, #structmember{name="max", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})}, #structmember{name="min", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})}, #structmember{name="allow_remote", type=tk_boolean, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_boolean)}, #structmember{name="ram_overrides_dump", type=tk_boolean, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_boolean)}]),

    orber_ifr:'ModuleDef_create_struct'(_OE_1, "IDL:mnesia/TableInfo:1.0", "TableInfo", "1.0", [#structmember{name="mode", type={tk_enum,
                                    "IDL:mnesia/AccessMode:1.0",
                                    "AccessMode",
                                    ["read_only","read_write"]}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/AccessMode:1.0",
                                               "AccessMode",
                                               ["read_only","read_write"]})}, #structmember{name="attributes", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})}, #structmember{name="arity", type=tk_long, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_long)}, #structmember{name="checkpoints", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})}, #structmember{name="ram_copies", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})}, #structmember{name="disc_copies", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})}, #structmember{name="disc_only_copies", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})}, #structmember{name="indexlist", type={tk_sequence,tk_long,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,tk_long,0})}, #structmember{name="load_order", type=tk_long, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_long)}, #structmember{name="local_content", type=tk_boolean, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_boolean)}, #structmember{name="master_nodes", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})}, #structmember{name="memory", type=tk_long, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_long)}, #structmember{name="size", type=tk_long, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_long)}, #structmember{name="storage_type", type={tk_enum,
                                         "IDL:mnesia/Storage:1.0",
                                         "Storage",
                                         ["ram_copies",
                                          "disc_copies",
                                          "disc_only_copies"]}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Storage:1.0",
                                               "Storage",
                                               ["ram_copies",
                                                "disc_copies",
                                                "disc_only_copies"]})}, #structmember{name="type", type={tk_enum,
                                    "IDL:mnesia/SetOrBag:1.0",
                                    "SetOrBag",
                                    ["set","bag"]}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/SetOrBag:1.0",
                                               "SetOrBag",
                                               ["set","bag"]})}, #structmember{name="where_to_read", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0})}, #structmember{name="where_to_write", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})}, #structmember{name="record_name", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0})}]),

    orber_ifr:'ModuleDef_create_struct'(_OE_1, "IDL:mnesia/SystemInfo:1.0", "SystemInfo", "1.0", [#structmember{name="auto_repair", type=tk_boolean, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_boolean)}, #structmember{name="backup_module", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0})}, #structmember{name="event_module", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0})}, #structmember{name="db_nodes", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})}, #structmember{name="debug", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0})}, #structmember{name="directory", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0})}, #structmember{name="dump_log_load_regulation", type=tk_boolean, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_boolean)}, #structmember{name="dump_log_time_threshold", type=tk_long, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_long)}, #structmember{name="dump_log_update_in_place", type=tk_boolean, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_boolean)}, #structmember{name="dump_log_write_threshold", type=tk_long, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_long)}, #structmember{name="extra_db_nodes", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})}, #structmember{name="is_running", type=tk_boolean, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_boolean)}, #structmember{name="schema_location", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0})}, #structmember{name="use_dir", type=tk_boolean, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_boolean)}, #structmember{name="checkpoints", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})}, #structmember{name="fallback_activated", type=tk_boolean, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_boolean)}, #structmember{name="local_tables", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})}, #structmember{name="master_node_tables", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})}, #structmember{name="running_db_nodes", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})}, #structmember{name="tables", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0})}, #structmember{name="transaction_failures", type=tk_long, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_long)}, #structmember{name="transaction_commits", type=tk_long, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_long)}, #structmember{name="transaction_restarts", type=tk_long, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_long)}, #structmember{name="transaction_log_writes", type=tk_long, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_long)}]),

    _OE_2 = orber_ifr:'ModuleDef_create_interface'(_OE_1, "IDL:mnesia/corba_session:1.0", "corba_session", "1.0", []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/dirty_write:1.0", "dirty_write", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="object", type=tk_any, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_any), mode='PARAM_IN'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/dirty_read:1.0", "dirty_read", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="result", type={tk_sequence,tk_any,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,tk_any,0}), mode='PARAM_OUT'}
, #parameterdescription{name="key", type=tk_any, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_any), mode='PARAM_IN'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/dirty_update_counter:1.0", "dirty_update_counter", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="newval", type=tk_long, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_long), mode='PARAM_OUT'}
, #parameterdescription{name="val", type=tk_long, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_long), mode='PARAM_IN'}
, #parameterdescription{name="key", type=tk_any, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_any), mode='PARAM_IN'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/dirty_delete:1.0", "dirty_delete", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="key", type=tk_any, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_any), mode='PARAM_IN'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/dirty_delete_object:1.0", "dirty_delete_object", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="object", type=tk_any, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_any), mode='PARAM_IN'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/dirty_slot:1.0", "dirty_slot", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="result", type={tk_sequence,tk_any,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,tk_any,0}), mode='PARAM_OUT'}
, #parameterdescription{name="slot", type=tk_long, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_long), mode='PARAM_IN'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/dirty_first:1.0", "dirty_first", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="next_key", type=tk_any, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_any), mode='PARAM_OUT'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/dirty_next:1.0", "dirty_next", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="next_key", type=tk_any, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_any), mode='PARAM_OUT'}
, #parameterdescription{name="key", type=tk_any, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_any), mode='PARAM_IN'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/dirty_all_keys:1.0", "dirty_all_keys", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="keys", type={tk_sequence,tk_any,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,tk_any,0}), mode='PARAM_OUT'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/dirty_match_all:1.0", "dirty_match_all", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="result", type={tk_sequence,tk_any,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,tk_any,0}), mode='PARAM_OUT'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/dirty_index_read:1.0", "dirty_index_read", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="result", type={tk_sequence,tk_any,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,tk_any,0}), mode='PARAM_OUT'}
, #parameterdescription{name="pos", type=tk_long, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_long), mode='PARAM_IN'}
, #parameterdescription{name="key", type=tk_any, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_any), mode='PARAM_IN'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/create_table:1.0", "create_table", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="tabDefs", type={tk_struct,
                                            "IDL:mnesia/TableDef:1.0",
                                            "TableDef",
                                            [{"type",
                                              {tk_enum,
                                               "IDL:mnesia/SetOrBag:1.0",
                                               "SetOrBag",
                                               ["set","bag"]}},
                                             {"mode",
                                              {tk_enum,
                                               "IDL:mnesia/AccessMode:1.0",
                                               "AccessMode",
                                               ["read_only","read_write"]}},
                                             {"ram_copies",
                                              {tk_sequence,{tk_string,0},0}},
                                             {"disc_copies",
                                              {tk_sequence,{tk_string,0},0}},
                                             {"disc_only_copies",
                                              {tk_sequence,{tk_string,0},0}},
                                             {"index_list",
                                              {tk_sequence,tk_long,0}},
                                             {"attributes",
                                              {tk_sequence,{tk_string,0},0}},
                                             {"record_name",{tk_string,0}}]}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_struct,
                                               "IDL:mnesia/TableDef:1.0",
                                               "TableDef",
                                               [{"type",
                                                 {tk_enum,
                                                  "IDL:mnesia/SetOrBag:1.0",
                                                  "SetOrBag",
                                                  ["set","bag"]}},
                                                {"mode",
                                                 {tk_enum,
                                                  "IDL:mnesia/AccessMode:1.0",
                                                  "AccessMode",
                                                  ["read_only","read_write"]}},
                                                {"ram_copies",
                                                 {tk_sequence,
                                                  {tk_string,0},
                                                  0}},
                                                {"disc_copies",
                                                 {tk_sequence,
                                                  {tk_string,0},
                                                  0}},
                                                {"disc_only_copies",
                                                 {tk_sequence,
                                                  {tk_string,0},
                                                  0}},
                                                {"index_list",
                                                 {tk_sequence,tk_long,0}},
                                                {"attributes",
                                                 {tk_sequence,
                                                  {tk_string,0},
                                                  0}},
                                                {"record_name",
                                                 {tk_string,0}}]}), mode='PARAM_IN'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/delete_table:1.0", "delete_table", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/add_table_copy:1.0", "add_table_copy", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="type", type={tk_enum,
                                         "IDL:mnesia/Storage:1.0",
                                         "Storage",
                                         ["ram_copies",
                                          "disc_copies",
                                          "disc_only_copies"]}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Storage:1.0",
                                               "Storage",
                                               ["ram_copies",
                                                "disc_copies",
                                                "disc_only_copies"]}), mode='PARAM_IN'}
, #parameterdescription{name="node", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/del_table_copy:1.0", "del_table_copy", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="node", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/move_table_copy:1.0", "move_table_copy", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="to", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
, #parameterdescription{name="from", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/add_table_index:1.0", "add_table_index", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="attrname", type=tk_long, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_long), mode='PARAM_IN'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/del_table_index:1.0", "del_table_index", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="attrname", type=tk_long, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_long), mode='PARAM_IN'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/change_table_copy_type:1.0", "change_table_copy_type", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="type", type={tk_enum,
                                         "IDL:mnesia/Storage:1.0",
                                         "Storage",
                                         ["ram_copies",
                                          "disc_copies",
                                          "disc_only_copies"]}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Storage:1.0",
                                               "Storage",
                                               ["ram_copies",
                                                "disc_copies",
                                                "disc_only_copies"]}), mode='PARAM_IN'}
, #parameterdescription{name="node", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/change_table_access_mode:1.0", "change_table_access_mode", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="mode", type={tk_enum,
                                         "IDL:mnesia/AccessMode:1.0",
                                         "AccessMode",
                                         ["read_only","read_write"]}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/AccessMode:1.0",
                                               "AccessMode",
                                               ["read_only","read_write"]}), mode='PARAM_IN'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/wait_for_tables:1.0", "wait_for_tables", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="failed_tabs", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0}), mode='PARAM_OUT'}
, #parameterdescription{name="timeout", type=tk_long, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_long), mode='PARAM_IN'}
, #parameterdescription{name="tabs", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/force_load_table:1.0", "force_load_table", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/change_table_load_order:1.0", "change_table_load_order", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="load_order", type=tk_long, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_long), mode='PARAM_IN'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/set_master_nodes1:1.0", "set_master_nodes1", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="nodes", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/set_master_nodes2:1.0", "set_master_nodes2", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="nodes", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0}), mode='PARAM_IN'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/backup1:1.0", "backup1", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="filename", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/backup2:1.0", "backup2", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="modulename", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
, #parameterdescription{name="opaque", type=tk_any, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_any), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/install_fallback1:1.0", "install_fallback1", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="filename", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/install_fallback2:1.0", "install_fallback2", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="modulename", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
, #parameterdescription{name="opaque", type=tk_any, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_any), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/uninstall_fallback:1.0", "uninstall_fallback", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/dump_log:1.0", "dump_log", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/dump_tables:1.0", "dump_tables", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="list", type={tk_sequence,{tk_string,0},0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,{tk_string,0},0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/activate_checkpoint:1.0", "activate_checkpoint", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="cpdef", type={tk_struct,
                                          "IDL:mnesia/CheckpointDef:1.0",
                                          "CheckpointDef",
                                          [{"cpName",{tk_string,0}},
                                           {"max",
                                            {tk_sequence,{tk_string,0},0}},
                                           {"min",
                                            {tk_sequence,{tk_string,0},0}},
                                           {"allow_remote",tk_boolean},
                                           {"ram_overrides_dump",tk_boolean}]}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_struct,
                                               "IDL:mnesia/CheckpointDef:1.0",
                                               "CheckpointDef",
                                               [{"cpName",{tk_string,0}},
                                                {"max",
                                                 {tk_sequence,
                                                  {tk_string,0},
                                                  0}},
                                                {"min",
                                                 {tk_sequence,
                                                  {tk_string,0},
                                                  0}},
                                                {"allow_remote",tk_boolean},
                                                {"ram_overrides_dump",
                                                 tk_boolean}]}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/deactivate_checkpoint:1.0", "deactivate_checkpoint", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="cpName", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/backup_checkpoint1:1.0", "backup_checkpoint1", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="filename", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
, #parameterdescription{name="cpName", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/backup_checkpoint2:1.0", "backup_checkpoint2", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="modulename", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
, #parameterdescription{name="opaque", type=tk_any, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_any), mode='PARAM_IN'}
, #parameterdescription{name="cpName", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/load_textfile:1.0", "load_textfile", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="filename", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/dump_to_textfile:1.0", "dump_to_textfile", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="filename", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/table_info:1.0", "table_info", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="info", type={tk_struct,
                                         "IDL:mnesia/TableInfo:1.0",
                                         "TableInfo",
                                         [{"mode",
                                           {tk_enum,
                                            "IDL:mnesia/AccessMode:1.0",
                                            "AccessMode",
                                            ["read_only","read_write"]}},
                                          {"attributes",
                                           {tk_sequence,{tk_string,0},0}},
                                          {"arity",tk_long},
                                          {"checkpoints",
                                           {tk_sequence,{tk_string,0},0}},
                                          {"ram_copies",
                                           {tk_sequence,{tk_string,0},0}},
                                          {"disc_copies",
                                           {tk_sequence,{tk_string,0},0}},
                                          {"disc_only_copies",
                                           {tk_sequence,{tk_string,0},0}},
                                          {"indexlist",
                                           {tk_sequence,tk_long,0}},
                                          {"load_order",tk_long},
                                          {"local_content",tk_boolean},
                                          {"master_nodes",
                                           {tk_sequence,{tk_string,0},0}},
                                          {"memory",tk_long},
                                          {"size",tk_long},
                                          {"storage_type",
                                           {tk_enum,
                                            "IDL:mnesia/Storage:1.0",
                                            "Storage",
                                            ["ram_copies",
                                             "disc_copies",
                                             "disc_only_copies"]}},
                                          {"type",
                                           {tk_enum,
                                            "IDL:mnesia/SetOrBag:1.0",
                                            "SetOrBag",
                                            ["set","bag"]}},
                                          {"where_to_read",{tk_string,0}},
                                          {"where_to_write",
                                           {tk_sequence,{tk_string,0},0}},
                                          {"record_name",{tk_string,0}}]}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_struct,
                                               "IDL:mnesia/TableInfo:1.0",
                                               "TableInfo",
                                               [{"mode",
                                                 {tk_enum,
                                                  "IDL:mnesia/AccessMode:1.0",
                                                  "AccessMode",
                                                  ["read_only","read_write"]}},
                                                {"attributes",
                                                 {tk_sequence,
                                                  {tk_string,0},
                                                  0}},
                                                {"arity",tk_long},
                                                {"checkpoints",
                                                 {tk_sequence,
                                                  {tk_string,0},
                                                  0}},
                                                {"ram_copies",
                                                 {tk_sequence,
                                                  {tk_string,0},
                                                  0}},
                                                {"disc_copies",
                                                 {tk_sequence,
                                                  {tk_string,0},
                                                  0}},
                                                {"disc_only_copies",
                                                 {tk_sequence,
                                                  {tk_string,0},
                                                  0}},
                                                {"indexlist",
                                                 {tk_sequence,tk_long,0}},
                                                {"load_order",tk_long},
                                                {"local_content",tk_boolean},
                                                {"master_nodes",
                                                 {tk_sequence,
                                                  {tk_string,0},
                                                  0}},
                                                {"memory",tk_long},
                                                {"size",tk_long},
                                                {"storage_type",
                                                 {tk_enum,
                                                  "IDL:mnesia/Storage:1.0",
                                                  "Storage",
                                                  ["ram_copies",
                                                   "disc_copies",
                                                   "disc_only_copies"]}},
                                                {"type",
                                                 {tk_enum,
                                                  "IDL:mnesia/SetOrBag:1.0",
                                                  "SetOrBag",
                                                  ["set","bag"]}},
                                                {"where_to_read",
                                                 {tk_string,0}},
                                                {"where_to_write",
                                                 {tk_sequence,
                                                  {tk_string,0},
                                                  0}},
                                                {"record_name",
                                                 {tk_string,0}}]}), mode='PARAM_OUT'}
, #parameterdescription{name="tab", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_IN'}
], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mnesia/corba_session/system_info:1.0", "system_info", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mnesia/Status:1.0",
                                               "Status",
                                               ["ok",
                                                "end_of_table",
                                                "timeout",
                                                "error"]}), 'OP_NORMAL', [#parameterdescription{name="reason", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0}), mode='PARAM_OUT'}
, #parameterdescription{name="info", type={tk_struct,
                                         "IDL:mnesia/SystemInfo:1.0",
                                         "SystemInfo",
                                         [{"auto_repair",tk_boolean},
                                          {"backup_module",{tk_string,0}},
                                          {"event_module",{tk_string,0}},
                                          {"db_nodes",
                                           {tk_sequence,{tk_string,0},0}},
                                          {"debug",{tk_string,0}},
                                          {"directory",{tk_string,0}},
                                          {"dump_log_load_regulation",
                                           tk_boolean},
                                          {"dump_log_time_threshold",tk_long},
                                          {"dump_log_update_in_place",
                                           tk_boolean},
                                          {"dump_log_write_threshold",tk_long},
                                          {"extra_db_nodes",
                                           {tk_sequence,{tk_string,0},0}},
                                          {"is_running",tk_boolean},
                                          {"schema_location",{tk_string,0}},
                                          {"use_dir",tk_boolean},
                                          {"checkpoints",
                                           {tk_sequence,{tk_string,0},0}},
                                          {"fallback_activated",tk_boolean},
                                          {"local_tables",
                                           {tk_sequence,{tk_string,0},0}},
                                          {"master_node_tables",
                                           {tk_sequence,{tk_string,0},0}},
                                          {"running_db_nodes",
                                           {tk_sequence,{tk_string,0},0}},
                                          {"tables",
                                           {tk_sequence,{tk_string,0},0}},
                                          {"transaction_failures",tk_long},
                                          {"transaction_commits",tk_long},
                                          {"transaction_restarts",tk_long},
                                          {"transaction_log_writes",tk_long}]}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_struct,
                                               "IDL:mnesia/SystemInfo:1.0",
                                               "SystemInfo",
                                               [{"auto_repair",tk_boolean},
                                                {"backup_module",
                                                 {tk_string,0}},
                                                {"event_module",{tk_string,0}},
                                                {"db_nodes",
                                                 {tk_sequence,
                                                  {tk_string,0},
                                                  0}},
                                                {"debug",{tk_string,0}},
                                                {"directory",{tk_string,0}},
                                                {"dump_log_load_regulation",
                                                 tk_boolean},
                                                {"dump_log_time_threshold",
                                                 tk_long},
                                                {"dump_log_update_in_place",
                                                 tk_boolean},
                                                {"dump_log_write_threshold",
                                                 tk_long},
                                                {"extra_db_nodes",
                                                 {tk_sequence,
                                                  {tk_string,0},
                                                  0}},
                                                {"is_running",tk_boolean},
                                                {"schema_location",
                                                 {tk_string,0}},
                                                {"use_dir",tk_boolean},
                                                {"checkpoints",
                                                 {tk_sequence,
                                                  {tk_string,0},
                                                  0}},
                                                {"fallback_activated",
                                                 tk_boolean},
                                                {"local_tables",
                                                 {tk_sequence,
                                                  {tk_string,0},
                                                  0}},
                                                {"master_node_tables",
                                                 {tk_sequence,
                                                  {tk_string,0},
                                                  0}},
                                                {"running_db_nodes",
                                                 {tk_sequence,
                                                  {tk_string,0},
                                                  0}},
                                                {"tables",
                                                 {tk_sequence,
                                                  {tk_string,0},
                                                  0}},
                                                {"transaction_failures",
                                                 tk_long},
                                                {"transaction_commits",
                                                 tk_long},
                                                {"transaction_restarts",
                                                 tk_long},
                                                {"transaction_log_writes",
                                                 tk_long}]}), mode='PARAM_OUT'}
], [], []),

    _OE_3 = orber_ifr:'ModuleDef_create_interface'(_OE_1, "IDL:mnesia/corba_connector:1.0", "corba_connector", "1.0", []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_3, "IDL:mnesia/corba_connector/connect:1.0", "connect", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_objref,
                                               "IDL:mnesia/corba_session:1.0",
                                               "corba_session"}), 'OP_NORMAL', [], [], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_3, "IDL:mnesia/corba_connector/disconnect:1.0", "disconnect", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, tk_void), 'OP_NORMAL', [#parameterdescription{name="object_key", type={tk_objref,
                                               "IDL:mnesia/corba_session:1.0",
                                               "corba_session"}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_objref,
                                               "IDL:mnesia/corba_session:1.0",
                                               "corba_session"}), mode='PARAM_IN'}
], [], []),

    ok.


%% General IFR registration checks.
register_tests(OE_IFR)->
  re_register_test(OE_IFR),
  include_reg_test(OE_IFR).


%% IFR type Re-registration checks.
re_register_test(OE_IFR)->
  case orber_ifr:'Repository_lookup_id'(OE_IFR,"IDL:mnesia/Status:1.0") of
    []  ->
      true;
    _ ->
      exit({allready_registered,"IDL:mnesia/Status:1.0"})
 end.


%% IFR registration checks for included idl files.
include_reg_test(OE_IFR) ->
  case orber_ifr:'Repository_lookup_id'(OE_IFR,"IDL:erlang:1.0") of
    [] ->
      exit({unregistered,"IDL:erlang:1.0"});
    _  ->
      true
  end,
  true.


%% Fetch top module reference, register if unregistered.
oe_get_top_module(OE_IFR, ID, Name, Version) ->
  case orber_ifr:'Repository_lookup_id'(OE_IFR, ID) of
    [] ->
      orber_ifr:'Repository_create_module'(OE_IFR, ID, Name, Version);
    Mod  ->
      Mod
   end.

%% Fetch module reference, register if unregistered.
oe_get_module(OE_IFR, OE_Parent, ID, Name, Version) ->
  case orber_ifr:'Repository_lookup_id'(OE_IFR, ID) of
    [] ->
      orber_ifr:'ModuleDef_create_module'(OE_Parent, ID, Name, Version);
    Mod  ->
      Mod
   end.



oe_unregister() ->
    OE_IFR = orber_ifr:find_repository(),

    oe_destroy(OE_IFR, "IDL:mnesia/corba_connector:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/corba_session:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/SystemInfo:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/TableInfo:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/CheckpointDef:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/TableDef:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/Checkpoints:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/AccessMode:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/SetOrBag:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/Storage:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/NodeList:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/Node:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/RecordName:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/AttrNames:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/Indices:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/KeyList:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/Key:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/TableList:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/TableName:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/Recordlist:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/Record:1.0"),
    oe_destroy(OE_IFR, "IDL:mnesia/Status:1.0"),
    oe_destroy_if_empty(OE_IFR, "IDL:mnesia:1.0"),
    ok.


oe_destroy_if_empty(OE_IFR,IFR_ID) ->
    case orber_ifr:'Repository_lookup_id'(OE_IFR, IFR_ID) of
	[] ->
	    ok;
	Ref ->
	    case orber_ifr:contents(Ref, 'dk_All', 'true') of
		[] ->
		    orber_ifr:destroy(Ref),
		    ok;
		_ ->
		    ok
	    end
    end.

oe_destroy(OE_IFR,IFR_ID) ->
    case orber_ifr:'Repository_lookup_id'(OE_IFR, IFR_ID) of
	[] ->
	    ok;
	Ref ->
	    orber_ifr:destroy(Ref),
	    ok
    end.



%% Idl file dependency list function
oe_dependency() ->

    {"/ldisk/daily_build/otp_prebuild_r11b.2007-06-11_19/otp_src_R11B-5/lib/mnesia_session/src/mnesia_corba_session.idl",
     ["/ldisk/daily_build/otp_prebuild_r11b.2007-06-11_19/otp_src_R11B-5/lib/ic/include/erlang.idl"]}.

