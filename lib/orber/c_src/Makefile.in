# ``The contents of this file are subject to the Erlang Public License,
# Version 1.1, (the "License"); you may not use this file except in
# compliance with the License. You should have received a copy of the
# Erlang Public License along with this software. If not, it can be
# retrieved via the world wide web at http://www.erlang.org/.
# 
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
# the License for the specific language governing rights and limitations
# under the License.
# 
# The Initial Developer of the Original Code is Ericsson Utvecklings AB.
# Portions created by Ericsson are Copyright 1999, Ericsson Utvecklings
# AB. All Rights Reserved.''
# 
#     $Id$
#
include $(ERL_TOP)/make/target.mk
include $(ERL_TOP)/make/$(TARGET)/otp.mk

CXX = @CXX@
CC = @CC@
LIBS = @LIBS@

BINDIR = ../priv/bin/$(TARGET)
OBJDIR = ../priv/obj/$(TARGET)

# ----------------------------------------------------
# Application version
# ----------------------------------------------------
include ../vsn.mk
VSN=$(ORBER_VSN)

# ----------------------------------------------------
# Release directory specification
# ----------------------------------------------------
RELSYSDIR = $(RELEASE_PATH)/lib/orber-$(VSN)

# ----------------------------------------------------
# Target Specs
# ----------------------------------------------------
ifeq ($(findstring win32,$(TARGET)),win32)
PROGRAMS = 
C_FILES = 
LIBRARY = InitialReference.lib
else
ifeq ($(findstring vxworks,$(TARGET)),vxworks)
PROGRAMS = 
C_FILES = 
LIBRARY =
else
PROGRAMS = \
	obj_init_port
C_FILES = \
	$(PROGRAMS:%=%.c) \
	setsockaddr_in.c 
LIBRARY = $(OBJDIR)/libInitialReference.a
endif
endif

CC_FILES = InitialReference.cc
HH_FILES = InitialReference.hh

TARGET_FILES= $(PROGRAMS:%=$(BINDIR)/%)
OBJ_FILES= $(C_FILES:%.c=$(OBJDIR)/%.o) 
CC_OBJ_FILES = $(CC_FILES:%.cc=$(OBJDIR)/%.o)

ALL_CFLAGS = @CFLAGS@ @DEFS@ $(CFLAGS) 
ALL_CXXFLAGS = @CXXFLAGS@ @DEFS@ 

# ----------------------------------------------------
# Targets
# ----------------------------------------------------

debug opt: $(OBJDIR) $(BINDIR) orber

ifeq ($(findstring win32,$(TARGET)),win32)
orber: 
	echo "Nothing to build on NT"
else
ifeq ($(findstring vxworks,$(TARGET)),vxworks)
orber: 
	echo "Nothing to build for VxWorks"

else
orber: $(TARGET_FILES) $(LIBRARY)
endif
endif

clean:
	rm -f $(TARGET_FILES) $(LIBRARY) $(CC_OBJ_FILES) 
	rm -f core *~

docs:

# ----------------------------------------------------
# Special Build Targets
# ----------------------------------------------------

$(OBJDIR):
	-mkdir -p $(OBJDIR)

$(BINDIR):
	-mkdir -p $(BINDIR)

$(LIBRARY): $(CC_OBJ_FILES) 
	-$(AR) rcv $@ $(CC_OBJ_FILES) 
	-$(RANLIB) $@

$(BINDIR)/obj_init_port: $(OBJ_FILES)
	$(CC) -o $@ $(OBJ_FILES) $(LIBS)

$(OBJDIR)/%.o: %.c
	$(CC) -c -o $@ $(ALL_CFLAGS) $<

$(OBJDIR)/InitialReference.o: InitialReference.cc InitialReference.hh
	$(CXX) -c -o $@ $(ALL_CXXFLAGS) InitialReference.cc

# ----------------------------------------------------
# Release Target
# ---------------------------------------------------- 
include $(ERL_TOP)/make/otp_release_targets.mk

ifeq ($(findstring win32,$(TARGET)),win32)
release_spec: opt
	$(INSTALL_DIR) $(RELSYSDIR)/priv/src
	$(INSTALL_DIR) $(RELSYSDIR)/priv/include
	$(INSTALL_PROGRAM) $(CC_FILES) $(RELSYSDIR)/priv/src
	$(INSTALL_PROGRAM) $(HH_FILES) $(RELSYSDIR)/priv/include
else
ifeq ($(findstring vxworks,$(TARGET)),vxworks)
release_spec:
	$(INSTALL_DIR) $(RELSYSDIR)/priv/src
	$(INSTALL_DIR) $(RELSYSDIR)/priv/include
	$(INSTALL_PROGRAM) $(CC_FILES) $(RELSYSDIR)/priv/src
	$(INSTALL_PROGRAM) $(HH_FILES) $(RELSYSDIR)/priv/include
else
release_spec: opt
	$(INSTALL_DIR) $(RELSYSDIR)/priv/bin
	$(INSTALL_DIR) $(RELSYSDIR)/priv/lib
	$(INSTALL_DIR) $(RELSYSDIR)/priv/src
	$(INSTALL_DIR) $(RELSYSDIR)/priv/include
	$(INSTALL_PROGRAM) $(TARGET_FILES) $(RELSYSDIR)/priv/bin
	$(INSTALL_DATA) $(LIBRARY) $(RELSYSDIR)/priv/lib
	$(INSTALL_DATA) $(CC_FILES) $(RELSYSDIR)/priv/src
	$(INSTALL_DATA) $(HH_FILES) $(RELSYSDIR)/priv/include
endif
endif


release_docs_spec:
